==首次开发项目例子：旅游服务 Tourist Services ==
===描述===
Wonder Travel公司计划将其行程(Trips)管理系统自动化，该系统将连接各旅行预订系统 (travel Booking systems) 和行程路线(PV)系统。<br>
The Wonder Travel company plans to automate its travel package (Trips) management system, which will interface the travel Booking systems and the Trip Routes (PV).

===功能需求===
该系统将包括菜单界面和定期运行的批量处理等功能。<br>
The system will consist of an online component based on a menu interface and a batch component that will run periodically.

====RF01====
将使用行程包的行程码(ID)作为索引,存储数据。<br>
行程(Trips)包括:
*行程码(ID)
*行程路线编号(PV)
*符合资格的导游姓名
*行程类型(汽车、巴士、火车、飞机、游轮、混合)
*计划版本数
*版本频次(月、季等)<br>

用户将从下拉列表中选择行程路线编号(PV code) （来自行程路线(PV)文件），系统会 自动生成行程码 (Trip code)。
行程路线 Trip Routes (PV) 文件包含旅游区域(例如:北欧、北极、突尼斯、土耳其、希腊、美国、古巴和加勒比地区、日本、中国、埃及……等等）,信息都是由外部系统管理。<br>
从导游注册文件中获得有资格的导游名字，然后利用下拉列表来设置哪位导游有资格带哪个行程(Trip)。<br>
版本状态字段将自动设置为“planned”（已策划）<br>
行程类型将通过下拉列表来设置一些值，如“文化”或“休闲”或“宗教”等
使用功能键 （function key）完成验证、一致性检查(编辑)和写入输入的数据,系统会按需要报错并显示错误信息。<br>

====RF02====
基于行程码(ID) (Trip code) 和功能键选择行程 (Trips)，<br>
Trips将显示与上一段RF01中包含的相同数据，以及从PV文件中提取的数据，以及从RF07段中提到的导游注册文件中提取的导游的详细数据。<br>
用户使用，与上一段相同的Trips下拉列表，进行选择。<br>
如果trip文件中不存在搜索的行程码(ID)，系统将报错。<br>


====RF03====
RF01中包含的所有字段都可以修改 - 除了行程码(ID)(因为它是作为索引)。<br>
版本状态字段只能通过 选择下拉列表中来更改, 只可以更改 包含“已提供 provided”和“已删除 deleted”值的内容。<br>
无论如何，如更新版本状态字段将会自动更新:<br>
* 余下可提供的版本数##<br>
::(## 计划可提供版本数，减去已提供/删除的版本数)<br>

用户可用与RF01中相同的导游下拉列表挑选导游。<br>
使用功能键 （function key）完成验证、一致性检查(编辑)和写入输入的数据。系统会按需要报错并显示错误信息。<br>

====RF04====
用户选择行程码，按下功能键，即可取消行程。<br>
使用RF01中提到相同下拉列表，来选择要删除的行程。如果Trip文件中不存在该行程码(ID)，系统将报错。<br>
系统也有取消确认消息。<br>

====RF05====
用户将能够查看属于某个行程路线(PV)的旅行版本的信息。用户必须输入行程码(ID)(Trip code) 并按下功能键。选择的行程版本将显示以下数据:<br>
*行程码(ID)
*行程描述
*PV号
*PV描述
*导游姓名(所有符合资格的导游)
*导游资格(所有有资格参加本次旅行的导游)
*计划的版本数
*版本的频率
*提供的版本数
*每个版:
**版ID
**版日期
**版状态(已计划/提供/删除)
**已选择的导游<br>
行程描述和PV描述数据是从PV文件中提取。
用户也可以要求打印显示的信息。<br>


====RF06====
由于WonderTravel提供的旅行具有季节性，通过选择行程代码(必须存在于旅行文件中)并输入版本日期(必须大于第一次输入的版本日期)来生成行程的版本。系统会自动生成唯一的版本码。版本的日期考虑了季节性相关的选择。<br>
版本状态字段会自动设置为“planned”。一个功能键将激活数据的写入。如果需要，将生成错误消息。<br>


====RF07====
有关导游的信息将以导游的姓名作为索引保存在导游登记簿中。<br>

====RF08====
使用导游的姓名和功能键选择 ， 便可以显示导游信息。如果导游登记簿指南中不存在该导游，系统将生成一条消息。下拉列表与RF01的导游下拉列表相同。<br>

====RF09====
除了导游的名称(因为它是索引)，导游数据都可以更改。<br>
可用于与RF01段相同的导游下拉列表，选择要修改数据的导游。<br>
使用功能键 （function key）完成验证、一致性检查(编辑)和写入输入的数据,系统会按需要报错。<br>

====RF10====
输入的旅行文件数据将通过一个文件发送到后台预订系统，更新 行程(Trips) 。信息来自行程(Trips) 文档及导游登记册(Guides Register) 。<br>

[[文件:Sifp 3 1.png|550px]]

[[文件:Sifp 3 2.png|600px]]


===答案与解读===
共三个实体：
#行程 (Trips)
#导游登记册 (Guides Register)
#行程路线(PV)

你可能会问：那些导游登记的各版本是否也应该是一个实体？（因需要花工夫开发）<br>
这不应该是实体，原因：各版本必须依赖导游的信息挂在一起，不可以独立存在，就好比我们要维护导游的某版本信息，这个版本信息不能算另外一个实体，因为没有导游的话，版本信息是不能单独存在。<br>

原则：不是根据是否要产生开发的工作量，而是从用户角度看，这实体能否独立存在和维护。否则功能点的估算就只是根据个人对开发工作量的估计，而不是从用户角度看功能的客观判断。（同样，行程里的版本也不能算是实体。）

行程管理，对用户来讲，都有新增、展示、修改、删除4个行为。在行程管理里，还有包括分析各版本，和管理行程版本等共4个行为。

导游管理，有新增、展示、修改 3个行为（没有删除）。

同步后台预订系统也是一行为,得出共 12(=4+4+3+1)行为，再加 3个实体。
计算简化功能点：每个实体 x7 ，每行为 x4.6 得出，共 76.2 (=3x7+12x4.6)简化功能点，详见下面列表：

[[文件:微信截图_20220325104633.jpg|600px]]

[[文件:微信截图_20220325104709.jpg|600px]]

[[文件:微信截图_20220325104725.jpg|600px]]

==增强与维护(FEM)项目例子：旅游服务 Tourist Services  ==
===描述===
基于以上旅游服务系统例子的需求为基础，客户提出以下软件功能增强与维护(FEM)<br>

===功能需求===

===RF01===

功能增强维护后，行程(Trips)管理系统必须显示在PV文件中旅行国家的当前政治局势的信息。<br>

===RF02===
有关导游经验的信息必须在导游登记档案的旅游领域(tourism)中处理。<br>

===RF03===
必须提供用户那些最多被挑选的行程/旅行套餐的统计数据。<br>

===RF04===
行程/旅游套餐必须送到相关政府部门备案。<br>

===答案与解读===
*新增两行为：统计，送政府部门备案
*变更了4个行为：处理导游经验信息的增查改，和关于行程的变更（政治局势信息）
*两实体，行程+导游，需有变更

动态功能点包括：<br>
增加的功能点 9.2 (2 x 4.6)，变更 32.4 (=4 x 4.6 + 2 x 7.0)，没有删除，总共的动态简化功能点 41.6。

静态功能点依据上面例子的 76.2，加上FEM增加的功能点 9.2，得出变更后静态功能点 85.4。详见下面列表：

[[文件:微信截图_20220325124602.jpg|600px]]

[[文件:微信截图_20220325124630.jpg|600px]]

[[文件:微信截图_20220325124706.jpg|600px]]
