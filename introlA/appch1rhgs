
==某软件开发公司敏捷开发过程改进案例==
===5月===
张工是公司的中层管理，管理好几个开发团队，有五位项目经理向他汇报。<br>
他听说老同学的团队都开始用敏捷开发，很感兴趣，并参加了一些敏捷的交流会，觉得可以解决很多传统瀑布性开发的不足，尤其是可以快速交付给客户。<br>
他要求部门经理全面推动敏捷开发，对团队成员进行相关培训，例如，SCRUM Master 内部培训。<br>
开始时，张工上级部门经理有些怀疑，问：“后面那些工程文档都不做，会不会影响质量和交付？客户都是专门做电信的，不缺钱，但是对质量要求很高。”<br>
张工便解释说，“只要利用敏捷把过程变成迭代，快速交付，改善工程的问题不难，主要是人的问题。”<br>
部门经理听到敏捷可以比以前更快速交付，之前客户经常因为延误而不满，他希望可以改变这现状，就答应了。

===8月===
开发组长王工周五下班后与朋友喝酒，开开心心说：
“太兴奋了。研发部门经理决定全面推动敏捷开发SCRUM；我们团队刚参加了两天培训，真正对应我们以前的传统瀑布式开发的种种问题，我们会2周一次迭代，快速反馈，我们会定期小步向客户发版，我们会与用户经常交流，获得他们的反馈。<br> 
现在团队合作不像以前只按工种工作，也会跟产品经理、业务方面更充分合作，给客户带来更高价值。<br>
工作方式也改变了，以前要写需求、规格说明书，现在简单化成用户故事和产品需求卡片，以前我们要做过详细项目计划甘特图，现在用改成用燃烧图和白板。每天用便利贴去写要开发什么东西贴在白板上面，开始的时候，贴的越多感觉越敏捷，我们改成叫 SCRUM team，有一系列的海报围绕我们。我们也没项目经理了，自己管理自己。本来的部门经理现在变成产品负责人，敏捷开发方式让我们团队自己做决策，不仅仅是技术方面，项目相关的也由我们项目组一起讨论决定。<br>
解除了以前‘瀑布式开发’的种种烦恼，这一切太完美了。“<br>

===9月===
”你们团队学完敏捷SCRUM后，项目如何？”<br>
王工充满自豪地说：<br>
“我们培训后就SCRUM的方法，定每两周一个冲刺，每次冲刺前都会用故事点来估算每个功能多大，然后按本次冲刺的资源，估计可以完成多少功能？<br>
然后用白板来监控模块完成的情况，哪些在开发中，哪些已经完成，团队和管理者都可以一目了然，不用像以前天天问我们了。我们每天早上也按照SCRUM的规定站立会议，每人说自己完成了哪些任务，今天做什么。<br>
大家都很兴奋，确实跟以前瀑布的做法不同。”

===10月===
”你们项目如何？”<br>
王工听完，想了一下，然后说：<br>
“我们本应上周要完成一次冲刺后的割接上线，但被推到下次了。“<br>
”为什么？”<br>
王工说：
”我们按培训学到的做冲刺计划会，按照产品的待办事项列表，团队利用扑克牌一起估算每一事项所需要的时间。我们总共八位开发人员，其中有一半是刚毕业不久，但大家刚上完培训，很有信心，虽然技术主管张工对我们出来的估算有些顾虑，觉得我们太理想，但大家刚培训完敏捷，张工也希望让部门经理尽快看到敏捷开发可以加快速度，我们就按这‘进取式’估算开展2周冲刺。<br>
但因新人多，编码水平有限，虽然大家已经尽快把开发出来的代码交给系统测试人员手工测试，依据测试发现的缺陷修正再测试，但越来越接近答应客户的2周割接上线时间，但是还是很多BUG没改好，最后几天，基本就天天加班，最终到验收时，仍然有不少问题，最终割接前测试，还是不能达到客户要求的水平，没办法，未能上线。<br>
大家确实都尽力冲刺了，但未能达到我们本来希望的结果。“

===11月===
部门经理之前收到客户总监电话，投诉一些技术缺陷，导致好几次不能按计划上线，问为什么正在交付的软件质量变差了？<br>

张工被问到是什么原因时无法回答，只能说立马回去探索原因，尽快汇报，但心里想：
“开始敏捷后，因为快速迭代，以前要做概要设计、详细设计的过程反而被忽略了，导致有些写出来的代码，后面就很很难适应快速的变化修改，导致要不然就功能做不出来。
因要赶时间，可以按客户的要求时间交付的话，由于本身代码不好，只可以临时凑凑，不长久。”<br>
张工从部门经理办公室出来后，找其中一位项目经理李工喝茶，回顾一下发现项目团队对这次敏捷SCRUM的改革有意见。例如上层为了更快速交付，实现敏捷可以快速交付承诺，把一些本来不太可能的进度时间压到团队去，完全不是本来的那种自主团队管理的概念。出现问题多了，就请了敏捷教练过来辅导，但SCRUM的教练也缺乏软件工程的基础，只懂项目管理过程。所以他们也解决不了软件相关的问题。只是把精益管理怎么做迭代，怎么做回顾这些基本过程再解读一下，解决不了实际问题。<br>

李工：<br>
”因为我们做这块业务已经很多年了，本来业务的变化不多，只是一些小的功能改动，所以开发人员尽量不去动核心的代码，怕改动了反而会影响投产，切割不了。但有时为了满足一些新功能，继续在老代码的基础上去写，这种做法效率很低，也不长久，估计一两年后会难以运行了，我们会被迫重写整个产品，而老代码开发人员大部分都离开了，后面的代码维护变得非常困难，即使用敏捷也解决不了这个问题。”

无论张工或李工也没有能去总结出什么好的解决方案。现在推行敏捷才刚刚三个月，绝不能打退堂鼓，回到本来的状态。但应怎么解决敏捷带来的问题？挽回部门经理与客户的信心呢？<br>


==如何改善==
从以上案例看到，本来管理层希望利用敏捷开发，加快软件开发的交付，减少延误，令客户更满意。但因为只注重项目管理，但没注意和改善软件开发本身的质量，人员能力等因素，开发出来的软件缺陷比以往多，导致后面大量返工，恶性循环，后面更导致延误，最终客户投诉。<br>
因为软件本身设计有问题，导致软件难以修改，开发人员都不敢改动任何代码，怕可能会引起系统崩溃。

怎样可以确保开发出来软件的质量？

敏捷开发有很多种方法(SCRUM 只是其一）,因为目的不仅仅是管好项目进度，也要确保软件产品的质量。所以SCRUM 只包括项目管理部分，不全面，反过来，例如极限编程(XP eXtreme Programming),因它的发明者Kent BECK 本身是一位精通面向对象的编程员，所以XP不仅仅关注项目管理，也包含编程的最佳实践。下图是 Ron Jeffery 把XP的重点画成从外到内3层：

[[文件:cleanagile f1.8.jpg|500px]]。

SCRUM 只包含了外层的部分，缺乏中间和内层元素。
按XP的12实践（详见附件）都做到了便可以解决张工的问题吗？<br>

先问你以下关于汽车公司的问题：

[[文件:TvsGcompScreenshot 2023-06-07 121806.jpg|650px]]

T公司在五六十年代，在销售，生产成本都远远不如G公司，但它每年生产率都一直提升。

请猜猜T和G是那家公司？ （提示：两家都是世界级汽车公司，现在你还能买到它们生产的汽车。）
:::::= = = =             = = = =         = = = =
G 是美国通用； T 是日本丰田。

为什么丰田能从一家战后小公司能提升为世界最大的汽车公司？
==丰田故事==
[[文件:ToyotaPresidentPicture1.png|200px]]<br>
丰田喜一郎先生 （创始人）<br>
[[文件:大野耐一.png|200px]]

二战后50年代,丰田汽车规模很小，经营很困难，在破产边缘。
但丰田创始人喜一郎先生明白美国生产线的弊端，意识到未来的汽车生产必须是Just-In-Time：：
*每一辆都是按客人订单订制：例如，颜色，配置，左右钛等
*从钢材原料开始，整个生产线，零等待，零浪费
::每个工作步骤所需配件按生产需要到达 （不晚，也不早到），把生产过程中的配件降到零

[[文件:远景1.png]]

喜一郎先生安排总工大野耐一去美国汽车公司考察。

{| class="wikitable"
|-
|为什么福特Model-T 出名？它是第一辆一般人买得起的汽车
首辆现代汽车是由德国奔驰(Benz)于1885制作，
但是这些第一代汽车都非常昂贵。
老福特是一名工程师，对机械特别感兴趣，
白天是爱迪生公司的总工程师，到了下班后就研究汽车发动机
经过十年的不断优化，最终开发出4冲程（Quadcycle, a self-propelled）自动汽车发动机
他的发明大大降低了汽车组件的成本
1908 Model-T 首次推出市场，售价是850美金，虽然已经比同期的其他厂家汽车便宜，
但还是超出一般工人家庭可以负担的水平。

为了进一步降低成本，老福特觉得必须想其他办法。
汽车组装一直都是作坊式运作，
所以组装汽车需要超过12个工时。
为了降低组装时间，必须要学其他工厂，
如啤酒，麦粉厂，它们都已经是流水式生产线生产(Assembly Line)
福特把整个Model-T组装拆分成84步骤，
并培训工人只做一项工作，
还聘用了科学工程师TAYLOR先生
设计整个流程，提高效率，
最终可以一个半小时完成组装一辆汽车。
生产线生产帮助福特公司把成本和售价降下来，
在15年期间（1913 - 1927），福特公司总共生产了15,000,000辆 Model-T。
虽然大量生产能直接降低生产成本,
但这种做法也要付出代价：
*为了生产所有都是同一个款式同一个颜色，黑色
*为了提高生产的效率，也增加了组件的库存量 （为了提高效率，降低成本，大部分组件都要批量生产(Batch production)，例如轮胎。例如上面右下图看到工厂里存在大量轮胎。)

[[文件:FordModelT 2023-06-10 100431.jpg|600px]]

'''Federick TAYLOR与科学管理(Scientific Management)'''<br>
[[文件:Weisbord P34.jpg|200px]]

十九世纪末美国很多工业快速扩张,Taylor先生发现当时很多工厂生产力很低，例如钢铁厂。
他是很落地、实干的人，他就想有什么好方法可以让提高生产力，工人也多赚些钱。他发现很多工作都未设计好，未能好好利用工人，他针对工作本身做很多科学研究，测量每个工作应该多长时间，怎么做最好，然后按他的最佳设计把工作细分，也同时要求公司提高员工的奖励，希望工人看到因科学管理，提高生产，个人也受益。1890年，他加入了Bethlehem Steel，钢铁业的大公司，帮它设计了很多奖励制度，也设定了一些叫工业工程师(Industrial engineers)岗，发现生产力可以提升30-40%。后来公司被收购，他也被辞退，他便成为顾问，当时都没有顾问这个职业，他可算是全球首位工程顾问。
|}


总工大野耐一先生，
从美国的超市（非汽车公司）得到如何做Just-In-Time的启发，回国后就开始在丰田致力推动。
开始时，很多人都觉得Just-In-Time 这个愿景好像是远不可及的梦想。

==水面下的管理思路==

[[文件:冰山.png]]

为什么丰田能成功地把汽车生产做到 Just-In-Time ，超越西方的巨头，使日本汽车制造过程成为世界"标准"？
但我们不能单从表面看这"系统"的方法和技巧，例如大家都熟悉的看板管理（他的竞争对手通用、福特、肯定都学过），更重要是了解背后的管理思路。我们看看下面丰田九条原则，开始了解水面下的"系统":<br>
# 以忙碌为耻
# 培养人才 - 逼他们动脑筋
# 从心里相信“大家的力量”
# 不以“我们公司”作主语
# 标杆管理 (Benchmarking)
# 容易实现的目标不是好目标
# 根因分析
# 成长比成功更重要
# 所有人参与改进


=== 以忙碌为耻===
*不吝惜智慧，但要吝惜汗水

{| class="wikitable"
|'''把“动作”转变为 “工作”'''
以前,当大家批评某机关的工资太高时,职员会以上班时间很长, “一直在努力工作”为由来反驳人们的批评。这其实是一种对于“有动作”和“在工作”的混淆。不管上班时间有多长,如果没能够创造出利润,那么就不能称之为工作,也不能称之为一直在努力。
丰田是把“动作”和“工作”分开考虑的。<br>
在丰田看来, “就算一直在动也不代表那个人在工作”。
省掉徒劳动作,把“在动着”转化为“在工作”。<br>

大野耐一先生曾经问过年轻员工: “每天工作一小时左右,你们能做到吗?"
听了这句话后,有人抱怨“算上加班时间,我们一天工作九个小时,他那句话是什么意思?"确实,他们在公司待了很长时间,但如果把“有动作”和“在工作”分开考虑,九个小时中,真正在工作的时间可能只有一小时。大野先生指的是这一点。<br>
关键的不在于流着汗在公司转了多长时间,而要把自己的工作区分成“徒劳作业”和“有价值作业”。
|}

因缺乏数据，很难判断这些软件开发人员每天有效生产多少？什么因素妨碍员工生产率提升？<br>
{| class="wikitable"
|
二战后，日本经济萎缩,丰田辞退了不少员工；1950年，朝鲜战争，需要大量增产，但丰田选择了只增加设备，而不增加人手，大野先生也借这机会，完善丰田生产方式，成功找到了以不增加人手为前提的增产办法。

|}

===培养人才 - 逼他们动脑筋===
{| class="wikitable"
|'''人了不起的智慧'''
所谓丰田生产方式其实就是要建立起一种体制，把“人了不起的智慧”引导出来,使得这些智慧能在生产一线得到充分发挥。所以说“丰田生产方式源自人的智慧”。<br>
|}

企业相信员工的智慧以后，员工们的干劲、使命感、责任感都会随之而生,最重要的是,员工们会因此逐渐对工作抱有自豪感。一旦员工们的意识改变了,理所当然地,企业的竞争力也将获得很大的提高。<br>

丰田生产方式是TQM (Total Quality Management全面质量管理)的最佳例子，TQM强调专注客户、持续改进、以数据说话、员工参与等，丰田生产方式覆盖了 TQM 原则的 七项 (除了战略)

[[文件:TQM 1.2.png|500px]]


=== 从心里相信“大家的力量”===
* 不是靠“一个不平凡的人”，而是依靠“一百个平凡人”来创造亮眼的成绩
* 生产产品就是培养人才
:“做事业最关键是人.......‘培养人才'为基础”总裁丰田英二先生

:有一位丰田员工被问到“丰田生产方式到底是什么”的时候,这样回答: “就是在人的智慧建起的基础上,立起了自动化和及时生产这两根支柱。”<br>
:'''他所说的“人的智慧”是指“在一线工作人员的智慧”'''。<br>

===不以“我们公司”作主语===
*不是从“专业”的角度，而是从“顾客”的角度生产产品
:创业大忌 - 闭门造车,所以丰田的原则，对客户有用就一定做出来，但对客户无用，或者不想要，就绝不生产。<br>

[[文件:丰田p3.png]]

要创新必须从“顾客”的角度看，不单从工程师的视角看不仅适用于丰田和汽车制造：

{| class="wikitable"
| 征服太空，踏上月球
六七十年代，美国开始阿波罗太空计划。
首批宇航员强烈要求工程师加上窗户，逃生门，可人手控制等 （现代我们会觉得这些是太空船 (spacecraft) 基本要求, 但当时是闻所未闻）

1980，一位NASA工程师回顾当时工程部的想法：
“你们又不是火箭专家，航天专家，只是飞行员。
希望可以在火箭驾驶舱人工控制火箭飞行，开玩笑！
太极端，你们可不了解成本多高，我们应可以很轻易用工程的理由拒绝。”

|}

===标杆管理 (Benchmarking)===
丰田（如下图）很注重各种标杆，例如内部标杆、竞争性标杆等。软件开发也应该同样利用数据来制定量化目标，例如生产率。最近行业也要求做功能点估算来统一软件报价，有了功能点，团队就可以利用它来衡量软件团队的生产率，它也有不同行业的标杆做参考。

[[文件:丰田p1.png]]

=== 容易实现的目标不是好目标===
*不是“削减一成”，而是通过“取消一个零”来发现浪费

把原先需要三小时的工作，改用三分钟完成。<br>
听到上司这个要求，你该怎么回答呢?多数人会常识性地回答：“这太强人所难了”、“绝对做不到”。<br>

{| class="wikitable"
|丰田 '''“单分换模(Single Minute Exchange of Die)”'''例子：<br>
1965年，丰田汽车在推行丰田生产方式时遭遇一个瓶颈：装置更换时间太长，其中特别是500吨冲压机和1000吨冲压机的模具，更换时间长达2~4小时。如果不缩短这两个模具的更换时间，就不可能实现多品种少量生产方式。<br>
挑战由大野耐一先生统领，在生产管理的先行者，新乡重夫先生的指导下，分两个阶段展开。<br>
改善开始之前，新乡先生凭借自己多年的工作经验，了解到装置更换有两种方式。<br>
①内部装置更换——必须在机器停下来以后，才能进行的装置更换。<br>
②外部装置更换——能在机器运转过程中，或是在运转起来以后，进行的装置更换。<br>

要缩短时间，把内部装置更换和外部装置更换清楚地分开来是一个关键。能在外部装置替换作业中进行的工作，就全部在外部装置替换过程中实施。同时，分别对内部装置替换和外部装置替换进行改善。通过这种方法，装置更换时间缩短为一个半小时。<br>
完成这一改善花费了半年时间。通常能有这样的成果就可以告一段落了。但是，大野先生仍要求进一步缩短时间。<br>
他要求把更换过程“缩短为3分钟!”通常通过改善能把原先的2~4小时缩短为一个半小时，就可以很满意地说“已经很好了”。但是，大野先生不这么想。<br>
他认为： “既然能缩短到这个水平，那么继续改善肯定可以把时间缩短为3分钟。”<br>

改变汽车生产的单分换模的秘密<br>
对于这一要求，在以新乡先生为中心的技术小组中，自然有人提出“3分钟绝对干不完”。但是，新乡先生认为： “如果能把内部装置更换全部转化为外部装置更换， 3分钟也不是不可能…”<br>
之后，他着手对多达100个以上的项目进行了改善。<br>
首先，进一步对内部装置更换和外部装置更换进行细分，彻底把内部装置更换转化为外部装置更换。同时，想方设法对各种切割工具和模具进行设置，使得更换时用一个动作即可完成。此外，在紧固件上也动了很多脑筋。这样，终于创造出了无数项不花时间、能够简单完成同时可以在作业时保持稳定的改善。<br>
紧接着，对作业顺序反复进行改善，实施标准化(制定没有多余工序的作业标准)。这样，在挑战进行了三个月后的某一天，真的只要3分钟就能完成了!这个结果让所有人都大吃一惊。<br>
|}

=== 根因分析 ===
（五个为什么 是一种找根因的方法 ， 详见附件B)
* 不停留在“原因”上，而要找出“真因”，彻底改善
* 不追究责任，而是追究原因<br>
丰田的大野耐一先生说：
:''做到一半是不行的，只有一个期限，“到完成为止”''

当工程师报了有问题就必须要求工程师查找原因、提供数据，但很多时候这个工作并不简单，但大野耐一先生决不放弃，必须找到根因。





=== 成长比成功更重要===
*要培养人才，“改变体制”比“改变人”更有效

有些工厂只依赖张贴标语、海报，希望可以减少工地的事故发生率，但丰田不注重喊口号，而是动手干实事，包括机械保安、设备保安等

[[文件:ft 223.1.png|500px]]

{| class="wikitable"
|'''叫人做之前自己先做一遍给他们看'''
本田技研工业在中国创立广州本田的时候,派往当地的都是即将退休的经验丰富的中高年龄层技术人员,这批技术人员成为了厂里的中坚力量。正因为他们的努力,广州的本田工程才获得了成功。<br>
|}


===所有人参与改进===
{| class="wikitable"
|'''带诚意去赢得协作'''
B先生所在的A公司曾以丰田生产方式为基础进行了生产改革。<br>
要进行生产改革没有技术部门的配合是行不通的。但是,任凭 B先生怎么要求,技术部门依然毫不合作。B先生实在没有办法了,只能向总裁要求: “请加大我手上的权力,让我可以支配技术部。”总裁回答: “你去给我请教了大野(耐一)先生以后再说!”<br>

于是B先生去找大野先生,在听他诉说了自己面临的窘境以后,大野先生对他说: “你这一两天跟我一起去工厂转转吧!”并于百忙之中抽出时间带B先生参观了丰田的工厂以及附近的协作企业的工厂。这期间,大野先生什么话都没说,只在第二天下午问B先生:“怎么样,你明白了吗?”<br>
B先生回答: “我觉得在工厂听到的关于厂长的改善事例,跟丰田方式所强调的重点好像不太一致。”听了B先生的回答以后,大野先生点头: “就连我,也是一直都在忍耐的啊。工作并不是有权力就能解决问题的。要想得到对方的理解和信任,拿出诚意去找人家吧。”<br>

从那以后, B先生再也不找“因为我手里没有权力”之类的借口,而总是带着诚意去找对方协商,不久以后,他成功地对A公司实施了生产改革。<br>
每当听到有人感慨“下属不听话”的时候,一位曾在丰田工作的人就会说: “你要求自己的孩子"每天学习三小时'时,他会听话去学习吗?”<br>
对方的回答是: “估计没用。”<br>
“连自己的孩子都这样,更何况那些成年的员工呢?”<br>
|}

==现代汽车生产==
今天Just-In-Time已成为汽车制造的主流，例如：日产在英国牛津(Oxfordshire)专门生产mini 车的 工厂便能做到：
*从钢材原料到生产出汽车只需要24小时
*整个生产线没有任何中间等候，每68秒出一辆
*每天生产1000辆车

[[文件:NissanRobots-OIP.h8UAC7FBjlaCmA mBepJjQHaEi.jpg|500px]] <br>

'''挑战'''：每一辆汽车都不同 – 颜色，设备，左右驾驶座等
*生产线上每一辆汽车都按照客户需求订制
*组件不早不晚按需求准时到达生产线
*这便需要信息化系统把客户订单转换成生产信息

[[文件:NissanJIT OIP.RQGKy67DWGTu-DQiOCqW2gHaEK.jpg|500px]]

例如，生产线上每一辆的颜色都可以不同：<br>
[[文件:NissanProdLineOIP.wJFmfMl7q2 V8JaQi4kQ8QHaE6.jpg|400px]] <br>


==改善质量==

乔布斯离开苹果公司后，自己开创 NEXT，他接受访谈时总结了质量改进的重点：
{| class="wikitable"
|-
|质量提升的道理其实很简单，是重复的过程：我们需要不断去看，有哪些无效的环节要省略，哪部分要重新设计，不断试验、提升，就这么简单。重点是所有的提升都应该是科学化的，有数据而不是泛泛而谈。

一般管理层的思路是:我是领袖，你们应该听我命令。但应该是反过来，让应如何做好的决定权利放在团队手上，做改进不需要请求管理层的批准。改进是工作的一部分，整个架构扁平化，自己管控日常过程，每位工程师应像以前的工匠，愿意花精力不断做好。然后能以自己最后做出的优质工艺、产物自豪。
|}

要了解质量改进，先要了解质量的定义：

{| class="wikitable"
|-
| 按质量大师裘兰博士 (Dr JURAN)定义，质量包括两部分：
*满足客户需要    （客户包括外部客户和内部客户）
*没有缺陷<br>
这定义不仅仅适合于制作业、也适用于服务业，IT业。<br>
|}

质量管理，与财务管理类似，同样也有质量策划、质量控制和质量改进，基于这大框架再细分：如何制定质量目标，如何来制定度量等。<br>
质量策划包括：
#设定目标，包括外部和内部目标
#识别内部需求
#依据客户需求制定产品的功能特征
#制定产品和过程的目标
#设计过程来达到这些目标，最后验证过程能力<br>

所以如果希望利用敏捷开发，不仅仅是走迭代，确保进度没偏差，还要确保软件产品质量，也应该用裘兰博士的质量管理思路去看敏捷过程，才能更全面了解如何才可以确保软件开发的质量，也控制好交付工期，不延误，让客户满意。<br>

最佳实践，如果没有定质量目标，配上度量衡量和策划，都只是空想，对长远提升公司文化、团队成员的习惯没有任何帮助。举例:参照上图，例如我们想改善团队的策划和估算。首先要识别客户，哪些是主要干系人 - 甲方有什么要求；内部部门经理，有什么要求。然后从他们的诉求变成过程的功能和特征，但如果特征只是描述，没有数字也没有意义，所以要配合可衡量的度量单位，和用什么方式去收集那些数字，然后依据目标定过程要怎么去做，怎样改。

不是单纯‘空降’某敏捷流程（例如 SCRUM），便能加快团队的发布速度。
所以虽然极限编程里每一条实践都是最佳实践，也必须配合质量策划，和监控改进才会有效果。

==结束语==
从丰田故事看到“系统”如何帮公司培养知识工作者，发挥人的无限智慧， 为公司增值。 <br>
汽车制造大部分利用自动化机器，但当今软件开发生产和质量， 非常依赖开发人员的水平， 所以我们更需要建立“系统”，帮助员工快速成长。

前面分享的九个丰田管理思路：
# 以忙碌为耻
# 培养人才 - 逼他们动脑筋
# 从心里相信“大家的力量”
# 不以“我们公司”作主语
# 标杆管理 (Benchmarking)
# 容易实现的目标不是好目标
# 根因分析
# 成长比成功更重要
# 所有人参与改进

丰田汽车从50年代开始源自裘兰博士的质量管理思路，成为世界最大的汽车企业。

针对软件开发，如何基于以上质量管理、精益管理思路，配合敏捷开发最佳实践，提升产品质量与团队竞争力?

所以团队成员，包括团队组长与组员，的能力是过程改进的基础，不仅仅依赖领导人。

下一部分，我们探索‘团队与自我改善基本功’ 与成功要素。



:::---===<<< END >>>===---
