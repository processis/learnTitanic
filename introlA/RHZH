敏捷宣言已经有超过二十年的历史，国内越来越多软件开发团队开始采用敏捷和迭代，但总体效果参差不齐。有些年轻的团队成员听到敏捷不需要文档，以为也不需要注重代码质量，包括代码可读性，导致后面发布的软件产品问题多多，难以维护。要编写出高质量的代码，人本身能力非常关键，但软件工程快速发展，导致编程员人数快速增长，其中很多缺乏专业工程师素养，所有若要敏捷开发真正起作用必须先提升编程员能力。<br>
没有数据就无法管理，但很多敏捷团队只是走流程(每天站立会议、看板并非敏捷的重点)，缺乏度量，所以管理者一听到敏捷就觉得不靠谱，要求团队用回传统的瀑布开发方式。<br>
这二十年来，中外都出版了很多关于敏捷的书，但绝大部分都没有深入去探索以上的问题。这本书就是希望通过解读各种敏捷最佳实践，加上敏捷以外的其他知识，帮助大家理解并更好使用敏捷，提升软件的质量和总生产率，让团队成员与公司管理层获得双赢。<br>
同时也希望管理层通过这本书能了解敏捷开发的要素，并使用这个很好的开发模式，帮助公司提升软件产品质量，同时降低成本增加公司的竞争力。<br>

1980年，STROUTRUP 先生不满意当时很流行的C语言，因为在70年代，已经有如SmallTalk之类的面向对象语言，C是基于传统步骤式的语言，没有面向对象的功能，所以STROUTRUP先生就基于C的基础，加上有类功能的C (C with Classes)。过了4年，他同事觉得这个名字不好，就改成C++，也出了一本书叫C++,与本来经典的C很相似。后面C++就成为了面向对象的其中一个常用的语言。