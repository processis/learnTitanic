__NOTOC__

因故事点只是每个团队自己定义，无法用来作为组织级标准衡量规模，所以很多公司（尤其是银行）转用功能点来衡量软件开发规模。它不仅可用于公司内，也适用于行业标杆，例如验收测试缺陷数无法比较，但缺陷数除以功能点（规模）= 缺陷率，
便可以比较。功能点也适用于公司内或公司间结算，例如软件维护期里开发工作量变化很大，也难以事前预估，所以有些银行会按最终开发出来的功能点数结算使用部门付开发部的费用，减少争议。

虽然功能点分析源自70年代，但由于计算较复杂，一直未普及。针对这问题，国际功能点协会简化本来的功能点算法，推出简化功能点(SiFP)。虽然简化功能点数有偏差，但因敏捷迭代开发，每轮的规模不大，可以接受，所以越来越多团队开始从故事点转简化功能点，但由于不熟识功能点估算是从用户角度估算，而非从开发工程师的视角看，团队初次估算SiFP通常有误。下面是一些转简化功能点的常见问题：

==从故事点转简化功能点==
客户：我们以前一直使用故事点，为了更好做量化管理，我们新的项目开始使用简化功能点 - SiFP<br>
我：好的，看一下你的估算表 。 。 。 。
为什么这两个功能要分成两个行为？<br>
客户：这两个功能都挺复杂，估计需要很多开发工作量；我们以前用故事点估算时，也会分成两个故事点。<br>
我：请注意，在功能点估算，
是否是一个行为，取决于它算不算是一个基本过程
如果俩行为互相依赖，不能单独作为基本过程，就不应该分开为2个功能点。很多团队刚开始用功能点，与你们一样，没有弄清楚基本过程的概念，还是从工程师的角度，估计开发时间的工作量来判断是一个功能还是两个功能？在故事点用这种方式估算习惯，但因为功能点是要同一个功能上需求，不能有功能点数的差异，所以不能用估计开发难易程度来判断。<br>
客户：可否举个实例?<br>
我：以网约车为例,是否可以分成以下”行为“:

{| class="wikitable"
|-
! 活动名称 !!描述
|-
|
'''预约申请''' 
||
客户发出预约请求到预约系统，预约信息包括：日期、时间、上车的位置和目的地位置
|-
|
'''接收预约''' 
||
预约系统收集客户预约请求，并把预约数据记录在数据库
|-
|
'''检查是否有可用的车/司机''' 
||
预约系统从预约数据库中查看是否有合适的车/司机，如果能找到合适的时间、日期，能配合预约请求的话，看看司机是否有空档。如能找到合适，在系统更新内部状态为是，否则写否。
|-
|
'''寻找其他可选'''
||
如果状态是没有，预约系统继续在数据库搜索有没有接近的预期时间？否则写没有合适请求的出发地点和目的地。
|-
|
'''提供预约信息''' 
||
预约系统自动发出通知到客户，如果有合适空档或者提供接近的日期时间
|-
|
'''处理预约''' 
||
客户回复预约系统：接受或拒绝，预约系统把反馈记录在预约数据库。如果反馈是接受，预约系统会继续统计客户详细预约信息。如果客户拒绝，预约系统就会回复收到，并终止过程。
|-
|
'''分派司机''' 
||
如果客户接受，预约系统会指派司机到已确认的日期、时间，上车地点和目的地。预约系统把这个记录在数据库中，并发信息通知相关司机
|-
|
'''接乘客'''
||
司机按约好的日期时间，上车的地点接乘客，然后发信息到预约系统，通知乘客已经上车
|-
|
'''完成预约请求''' 
||
预约系统在数据库中记录已经完成整个过程

|}


客户：是的，而且每个行为都要花一定开发工作量。<br>
我：其实只有4个行为，因头5个，和最后2个都要合并才可以成行为（详见附件）。 如果要能独立成行为，必须符合基本过程条件。
基本过程不是随便定的，它有规则，比如从网约车案例我们可以看到，“预约申请”本身不能算一个基本过程，虽然预约申请可能要很复杂的开发工作，但是因为它不能独立存在，必须依赖其它的行为才算完整。<br>
例如，某公司财务系统有打印支票功能（用来付供应商），你觉得打印支票本身是否算基本过程？<br>
客户：听完你网约车例子，应该不算；因打印支票只是付款流程的一个可选部分。<br>
我：正确、算实体也应使用同样概念。例如，某人事管理系统，除了管理职工信息外，还有员工家属信息，因家属信息必须关连到员工信息，不能独立存在，所以家属信息本身不算是一个实体。你是否觉得你这表里的某些实体应合并？<br>
客户：听完你的解释，同意我们这次计算有些实体应合并。<br>
我：你们的功能点估算表没有明确区分新的迭代怎么处理变更与删除。
也没有明确动态功能点与静态功能点。<br>
客户：我们表中有计算每次迭代的总功能点数。<br>
我：你们可能有算每迭代的功能点，但难以看清后面迭代对应之前的变化。动态功能点是用来估算本本迭代的工作量，而静态功能点就是迭代后产品的功能点数。而且应该用表格形式把变更和删除累加在原本上一轮的功能上面，才可以更好看到迭代与迭代之间，功能上的变化。（详见附件例子）<br>

所以不要误以为可以像之前故事点估算，利用两页纸，写上各种复杂程度的故事点例子便可。国际功能点手册里包含很多计算实例，来解释功能点计算，才能确保对同一套需求，各人(依据用户的角度）才能估算出同样的功能点数。我刚刚的例子全都可以从国际功能点手册里找到，你们不需要再发明车轮(reinvent the wheel)。学功能点估算与写程序类似，必须多动手试。

建议你们读完网约车识别基本过程例子后，再读潜水学校两实例：
#首次开发
#增强功能与维护 (Enhancement)

觉得已经把握好功能点计算原理，可尝试练习3+4，同样是首次开发+ 增强功能与维护。

===总结===
虽然简化功能点比传统国际功能点NESMA简单，容易学，但开发人员容易还是用工程师的视角来估算（本应用用户的视角），导致计算错误。所以要多看案例，并做练习才能把握（能参加培训会更好）。因简化功能点不考虑实体/行为的复杂度，个别估算与传统功能点有偏差（详见附件），但因SiFP是取高中低中间值计算，所以多次估算的平均值能近似IFPUG/NESMA 估算值，尤其适用于敏捷多次迭代估算。

=附件=

==简化功能点(SiFP) 简介==

<big> '''它是做什么的？''' </big><br>
应用软件开发的客户需求可分成三类：
#功能性需求
#技术需求
#质量需求

第二类和第三类归为非功能性需求。功能点主要是针对功能性需求，目的是提供对客户有意义的功能点数，来客观地衡量软件规模。

<big> '''该如何去做？''' </big><br>
简化功能点(SiFP)主要两类度量：
#数据功能 - 实体 (逻辑文件 Logical File)
#事务功能 - 行为（基本过程 Elementary Process)

[[文件:功能点计数过程.jpg|500px]]

===简化功能点估算步骤：===
#确定功能点分析类型
#识别分析范围和应用边界
#计算数据类型功能点(Data Function)
#计算交易类型功能点(Transaction Function)
#计算功能点

===1:三种SiFP计算类型===
*开发(Development )
::DSFP = ADD + CFP
*应用 (Application   or Baseline after the initial development)
::ASFP = ADD
*更新/增强功能与维护 (Enhancement)
::ESFP = ADD + CHG + DEL + CFP

{| class="wikitable"
|
:::ADD 新增
:::CFP 数据转换，包括新建系统首次设定数据
:::CHG 变更
:::DEL 删除
|}

===2:识别分析范围和应用边界===
例子：用虚线标示系统边界：<br>
[[文件:功能点计数P62 2.0.jpg|500px]]<br>


===3:计算逻辑文件数===
*关于计算规则，详见"逻辑文件"

===4:计算基本过程数===
*关于计算规则，详见"基本过程"

===5:计算功能点===
*每个逻辑文件 = 7.0 简化功能点
*每个基本过程 = 4.6 简化功能点



==逻辑文件 Logical File==
'''(下面在计算实例里简称“实体”，方便理解)'''

*用来储存内部或外部数据，是用户可识别的逻辑相关的数据组或控制信息组，在被度量应用边界内部维护。
:('''用户可识别''' - 指数据或事务需求是被用户和软件开发人员双方共同认同并理解的。  例如:用户和软件开发人员双方都认同人力资源应用有维护和存储员工信息的功能。)

====注意====

逻辑文件包括两类不同的用户需求数据：
#功能性数据
#非功能性数据
功能性数据是用来满足用户功能需求的数据。例如，销售、银行账号、供应商、人员等信息。<br>
非功能数据主要是为了满足易用性（支撑下拉菜单所需的数据，可输入数据的上下范围等）；或性能方面（用于查询数据的索引index）；或可维护性（配置参数）。<br>
只有第一类功能性数据才算是逻辑文件。<br>

==基本过程 Elementary Process==
基本过程是对用户有意义的最小活动单元。例如:添加员工的用户需求包括建立工资和家属信息。只有添加所有员工信息,才能创建员工信息记录。单独添加一些信息使添加员工业务处于不持续状态,只有员工工资和家属信息都添加后,这个活动单元才能完成且业务处于稳定状态。

===识别基本过程===
为了识别基本过程，需要执行以下活动:
*把功能用户需求分解为最小活动单元,使其满足下面条件:
**对用户有意义<br>例如:功能用户需求要求在应用中添加新员工的能力。<br>
**构成一个完整的事务<br>例如:用户定义的员工信息包括工资和家属信息。如果家属人数大于零,添加员工信息时必须包括家属信息。本例中,添加员工信息(不包括添加地址、工资和家属信息)不满足本规则。<br>
**自包含<br>例如:除非输入所有的必需信息并且完成所有处理步骤,如验证、计算、更新ILFs,添加过程才是自包含的。<br>
**让应用程序的业务保持持续状态<br>例如:添加员工的用户需求包括建立工资和家属信息。只有添加所有员工信息,才能创建员工信息记录。单独添加一些信息使添加员工业务处于不持续状态,只有员工工资和家属信息都添加后,这个活动单元才能完成且业务处于持续状态。<br>

识别活动单元为基本过程需要满足以上所有规则。<br>

===识别基本过程主要目的===

基本过程的主要目的可识别为下列情形的一种:
*改变应用行为
*维护一个或多个ILFs
*呈现信息给用户

=实例1：识别基本过程 (EP elementary process)=
下面是某预约网约车过程：


[[文件:sifp p50图.jpg|600px]]

#预约申请
#接收预约
#检查是否有可用的车/司机
#寻找其他可选
#提供预约信息
#处理预约
#分派司机
#接乘客
#完成预约请求

==分析能否满足所有 EP 识别规则，判断能否独立成为基本过程 (EP elementary process),部分例子 ==
===预约申请===
#是否对用户有意义，客户功能需求的一部分？'''是'''
#是否构成一个完整的事务？'''否'''：预约申请本身不是一个完整的交易，因为过程必须也包括预约请求信息，收到其它可选的档期这些步骤，都不可以分离。
#是否自包含，可以独立存在？'''否'''：例如，接受预约申请；查看是否有档期，查看有没有其它接近的档期等，都是一些必须的相关步骤去完成这个基本过程。
#是否让应用程序达到稳定状态？'''否'''：整个业务需求只能在收到预约信息，发送、接受、处理、反馈给客户才算是完成稳定状态。

===分派司机===
#是否对用户有意义，客户功能需求的一部分？'''是'''
#是否构成一个完整的事务？'''是'''：分配到司机是一个完整的交易，包括收到司机的确认，把信息记录在系统中并通知司机。
#是否自包含，可以独立存在？'''是'''：分配到司机本身可以独立存在。
#是否让应用程序达到稳定状态？'''是'''：因为当司机被分配后，是完全满足业务的需要。

===接乘客===
#是否是客户功能需求？'''是'''
#交易是否完整？'''否'''：接乘客本身不算一个完整的交易，因为预约系统必须也记录这个信息。
#是否自包含，可以独立存在？'''否'''：确认预约申请是下面一个必须执行的过程，来完成这个基本过程。
#是否让应用程序达到稳定状态？'''否'''：整个业务需求只能在和预约系统确认沟通，已经接到乘客，然后系统也把记录更新到预约系统才算完成。





{| class="wikitable"
|-
! 业务过程/活动 !! 基本过程 (EP elementary process) 必须满足所有 EP 识别规则
|-
|
*预约申请 
*接收预约 
*检查是否有可用的车/司机 
*寻找其他可选 
*提供预约信息 
||
如果单独来看每个活动，不能满足基本过程的条件。它们必须要结合在一起，才能满足所有基本过程的条件。基本过程包括左面所有过程/活动。
Individually these activities do not meet all EP identification rules. 

They only satisfy all EP identification rules and fulfill the complete business need when combined. The EP is composed of the processing logic of all these business process activities.
|-
| 
*处理预约 
|| 
这业务流程、活动满足所有基本过程的要求，可以当成一个基本过程。
This business process activity meets all EP identification rules in itself and constitutes an EP.
|-
| 
*分派司机  
|| 
这业务流程、活动满足所有基本过程的要求，可以当成一个基本过程。
|-
|
*接乘客 
*完成预约请求 
||
如果单独来看每个活动，不能满足基本过程的条件。它们必须要结合在一起，才能满足所有基本过程的条件。基本过程包括左面所有过程/活动。

|}


==1.潜水学校:开发项目 EXAMPLE Diving School: Development Project==

===描述===
一所潜水学校需要一套用来管理合同员工（教练）、设施、轮班工作的系统。目的:有效地管理教练在潜水设施和几艘旅游潜水船上有关潜水课程/短途潜水的轮班工作。A diving school requires a system for managing their information: contractors, facilities, working shifts to effectively manage the coverage of shifts by the instructors that are available at the diving facilities and aboard several boats for touristic dives and diving courses.

===功能需求===

====RF01====
为处理教练保险单文件，并符合法例，学校需要为每个合同员工储存以下资料:
*序列号（独特，作为索引, 不能重复）
*姓名
*居住地址
*城镇
*邮政编码
*电话号码
*是否持有航海执照

To handle the documentation for the insurance policies of the instructors and to be in compliance with the current legislation, the school needs to store the following information for each Contractor:
*unique serial number
*first name and last name,
*address of residence,
*town of residence,
*postal code of residence,
*telephone number,
*whether in possession or not of nautical licence.

为了跟踪每个合同员工的“职业生涯”，学校决定给予他们以下分类:
#“潜水长”
#“助理教练”
#“教练”

In order to keep track of the 'career' of each Contractor, the school decided to associate with them a category, which can take the following values:
# "Dive-master"
# "Assistant Instructor"
#"Instructor"

这些分类是固定的，并不会随着时间而转变:每个合同员工会按顺序分配到合适的类别，代表个人“职业生涯”的发展(例如，一个新员工开始是“潜水长”，随着时间的推移，他会成为“教练”)。These values are fixed and are not expected to change over time; they can be assigned to each Contractor sequentially and represent the progress of 'careers' within the school (e.g. a new employee starts as "Dive-master" and advances over time to become "Instructor").

使用表单输入，显示，编辑和删除合同员工的数据。会有一个独立列表框，显示序列号、名和姓 （但没有附件明细），来选择要编辑、删除或详细查看的是哪位员工的数据。

Forms must be created for entry, display, editing and deletion of Contractor's data. In order to select the occurrence of data to edit, delete or view in detail, there will be an independent list box of items without accessory details: Serial number, Name and Surname.

用功能键激活所有的功能，并最终产生一个结果或错误信息。“删除合同员工”只是在逻辑上删除，没有数据会被物理删除，但会被标记为作废。只要有与其相关的工作班次，合同员工就不能被删除。

A function key will activate all the functions, and eventually generate an error/outcome 
message. The deletion of a Contractor is only a logical one: no data will be physically deleted, but will be labeled as obsolete. A Contractor cannot be deleted as long as there are working shifts associated with it.

====RF02====

学校还需要管理设施(“潜水”、“船”或“橡皮艇-RD”)，每一个设施都有独特的友好名称(例如:“潜水莫格利亚 diving_moneglia”、“潜水帕拉 diving_palau”、“蓝箭艇 blue-arrow-boat”、“格里大艇 goletta-boat”、“嘉莉花RD Genova_RD”等等)。

The school also needs to manage the Facilities ("diving", "boat" or "rubber dinghy - RD"), to each of which a unique friendly name is associated (for example: “diving_moneglia”, “diving_palau”, “blue-arrow-boat”, “goletta-boat”, “Genova_RD” and so on).

对于每种类型的设施，必须存储以下信息:
*设施识别名（独特，作为索引,不能重复）
*描述
*类型
*它能容纳的人数
*可用汽缸数
*是否有厕所
*是否有饮用水储备

For each type of facility, the following information must be stored:
*unique identifier of the Facility
*description
*type
*number of people it can host
*number of available cylinders
*presence or absence of portable toilet
*presence or absence of drinking water reserve.

必须创建表单来输入、显示、编辑和删除设施数据;如果有被分派到轮班，就不能删除设施。使用独立的列表（不显示附件细节），以便选择要编辑、删除或详细查看的数据，列表只展示：标识名称、描述、类型<br>
用功能键来激活某功能，并最终生成错误或结果信息。

Forms must be created for entry, display, editing and deletion of Facility data; a Facility cannot be deleted if there are active shifts. In order to select the occurrence of data to edit, delete or view in detail, there will be an independent display of the list of items without accessory details: Identifier, Description, Type.   A function key will activate all the functions, and eventually generate an error/outcome message.

====RF03====

最后，为了有效管理分派轮班(shift)的覆盖范围，学校需要处理合同员工以下轮班(shift)信息:
*工作轮班识别名（独特，作为索引,不能重复）
*可用的合同员工编号(使用下拉框挑选)
*提供本轮班可用的日期
*可用期的开始日期
*可用期的结束日期
*首选设施(使用下拉框挑选)
*状态(最初预设置为“预计轮班”)

Lastly, in order to effectively manage shifts coverage, the school needs to handle the 
following shift availability information of Contractors:
*unique identifier of the working shift
*serial number of the Contractor who is available (using a combo-box),
*date on which availability was provided,
*start date of the availability period,
*end date of the availability period,
*preferred facility (using a combo-box) 
*status (initially set to "tentative shift").

必须创建表单来输入、显示、编辑和删除轮班(shift)的有效信息。为了方便选择对哪些数据进行编辑、删除或查看详细信息，会独立显示没有附件细节的数据列表（如，不显示可用性标识号，合同员工序列号）。用功能键将激活这功能，并最终生成错误/或结果信息。

Forms must be created for entry, display, editing and deletion of Shift availability data. In order to select the occurrence of data to edit, delete or view in detail, there will be an independent display of the list of items without accessory details: Availability identifier, Contractor serial number.   A function key will activate all the functions, and eventually generate an error/outcome message.

====RF04====
每个合同员工可以提供不止一个可用轮班(availability)，每一个轮班最初都设定为“预计轮班tentative shift”状态。当分配协调各合同员工的可用轮班作为一个“轮班（shift）”内的可用资源时，秘书处在一个“分配轮班 assigned shift”内使用特定命令选择(转换)所需的可用轮班(availability)，她可以更改潜水期的开始和结束日期，并可以将之设定为“分派轮班”状态。删除“分派轮班”与删除“预计轮班”的功能/步骤类似。

Each Contractor can provide more than one availability, each one initially in "tentative shift" status. When consolidating an availability within a "shift", the Secretariat select the desired availability and transform it using specific command in a "assigned shift"; he/she can change the start and end dates of the dive period, and can assign the status of "operating shift" to the availability. To delete an operating shift after consolidation, the same function to delete a tentative shift can be used.

====RF05====

有以下查询:
#找出合同员工中谁已经有许可证，因此能够以“船夫”的身份带队出海 - 显示属性:序列号。姓和名，和总人数。
#选择当前某月份(或其他月份和年份)收到的所有可用合同员工——显示的属性:序列号、姓名、类别、可用期的开始日期和结束日期以及对设施的偏好。
#根据档案中设施的数量和类型，(包括考虑潜水和船数量)计算学校管理的最大人数。
#计算每个类别的员工人数(潜水主任;助理教练；教练）:按类别列出总计和小计。
#通过显示姓名和姓氏，显示最“忠诚”的员工，即年初以来提供最多可用时间段的前三名员工。
#上面查询4的增强版： 通过类别细化——换句话说，不仅仅是显示数量，可选择某个类别的相关合同员工列表(姓和名)与其总数量。

The following queries are defined and required to:
#Find out who, among the Contractors, already has a license and is therefore able to handle excursions at sea as "boatman" – attributes displayed: serial number, first name and last name, total.
#Select all availabilities of Contractors received for any month of the current year (or other month and year) – attributes displayed: serial number, first name and last name, category, start date and end date of the availability period, and facility preference.
# Calculate which is the maximum number of people managed by the school (considering both the dives and the boats), depending on the number and type of facilities in the archive. 
#Calculate the number of employees in each category (Dive-master; Assistant instructor; Instructor) present in the archive – total and subtotal by category.
#Select, by displaying first name and surname, the most "loyal" employees, i.e. the first three that have provided more availability since the beginning of the current year.
#An enhanced version of query 4 (above), parametric by category – in other words the capability of selecting a single category to display the list of Contractors (First name and last name) in addition to their total.

==例子一： 答案与解读==
共三个实体：
#合同员工
#管理设施
#轮班

你可能会问：那些合同员工的职称是否也应该是一个实体？（因需要花工夫开发）<br>
这不应该是一个实体，原因：人员的职称必须依赖人员的信息挂在一起，不可以独立存在，就好比我们要维护员工信息，假如也要维护员工的家属信息，这个家属信息就不能算另外一个实体，因为没有人员的话，家属是不能单独存在的。原则：不是根据是否要产生开发的工作量，而是从用户角度看，这个实体能否独立存在和维护。否则功能点的估算就只是根据个人对开发工作量的估计，而不是从用户角度看功能的客观判断。

每个实体对用户来讲，都有新增、展示、修改、删除4个功能。在人员管理里，还有一个功能是显示一个可选的列表，方便用户选择，这功能是增查改删以外的第五个功能。

设施管理也同样有这个列可选设备设施的一个展示框这第五个功能。

在轮班管理里面，除了增加、查看、修改、删除和展示外，它里面有两个下拉框功能：
#让客户挑选相关设施的 Combo-box下拉框
#让客户选人员的框

你可能会问，这 2 个下拉框功能是否不应该算额外的功能，而是属于“轮班”的增删改查基本功能的一部分？<br>
我们可以这样想：从用户的角度来看，如果没有这两个下拉框的功能，基本的增删改查功能是否可以实现；现在做了两个下拉框的功能，是额外的新增功能，更方便用户去选择，所以这两个算是额外两个功能。

也可参考IFPUG关于EI/EO/EQ 的识别要求；基本操作(elementary process)必须符合以下三条之一：
#使用独特处理逻辑，与应用中其他‘行为’（EI/EO/EQ） 的处理逻辑不同
#在该处理中识别出来的数据元素是与应用中其他‘行为’（EI/EO/EQ） 的数据元素不同
#在该处理中引用的‘实体’（ILF 和EIF） 与其他‘行为’（EI/EO/EQ） 所引用的不同

它要列出所有合条件的数据元素进这下拉框，类似一个新的报表，所以算一个行为。基于同类原因，挑选相关设施的 Combo-box 下拉框,选择可用合同员工 Combo-box 下拉框, 等各自也算一个行为。

在轮班里，还有一个展示可选的轮班功能，另外是分配轮班功能。还有最后的 RF05 六个查询功能。

得出共 24(=5+5+6+2+6)行为，加 3实体, 所以按简化功能点每个实体 x7，每行为 x4.6 得出，共新增131.4(=3x7+24x4.6)简化功能点，详见下面列表：

[[文件:Ex1SoluScreenshot 2022-04-05 115926.jpg|500px]]

[[文件:微信截图_20220412130822.jpg|550px]]

[[文件:微信截图 20210330152654.png|600px]]

[[文件:微信截图 20210330152702.png|600px]]


===计算功能规模===

:::DSFP = ADD + CFP

因为没有数据转换，所以 CFP=0， 所以 DSFP = （110.4+21） +0 = 131.4 SiFP

因是首次开发， ASFP = ADD = 131.4 SiFP


==2.潜水学校:FEM项目==
=== 描述 ===
参照之前的潜水学校系统，对功能进行了增强，并提出了该软件的功能优化维护项目(FEM)。With reference to the previously measured Diving School system, a Functional Enhancement Maintenance Project (FEM) for the Software is proposed.

=== 功能需求 ===
==== RF01 ====
用户想要取消合同员工删除功能。The user wants to eliminate the Contractor delete function.

==== RF02 ====
在短途潜水里， 在潜水设施管理中能管理船上医生的存在或缺失。The presence/absence of a ship doctor during excursions must be managed in the file DIVING FACILITIES.

==== RF03 ====

出于税收和安全原因，不再需要删除可用轮班这项功能 For tax and safety reasons the function to delete availability shifts will no longer be required.

==== RF04 ====
用户还需要管理课程参与者信息和他们参加的那个短途潜水信息：<br>
*管理参与者的信息包括:参与者ID，姓，名，出生日期，潜水执照，执照日期。<br>参加短途潜水:参与者ID。轮班编号，出游日，天数，最终考试是/否通过<br>
*用列表框 （包括：参与者ID，姓，名）来选择轮班中的参与者。<br>
*使用原本应用程序中已经有的列表框选择轮班。<br>
*用功能键将激活这功能，并最终生成错误信息/结果。

用功能键初始填充课程参与者信息，参与者信息源自以前参与者信息的备份数据。

The user also needs to manage the information of course Participants and their enrollment in the excursion. The information managed will be 
for Participants: Participant ID, LastName, FirstName, Date of Birth, diving license, license date. To enroll in the excursion shift: Participant ID, Shift ID, excursion date, duration, final examination passed (YES/NO).Selection of the participants in an excursion shift will be obtained by List Box on the Participant file, containing Participant ID, FirstName, LastName. For Shift selection the List box already available in the basic application will be used. A function key will activate the function, and eventually generate an error/outcome message.

A functionality will be provided to populate initially the participant's file with an already existent archive of past participants.

==== RF05 ====
用户还需要能够在课程结束时颁发出席证书给在短途潜水中登记的所有参与者。除了管理参与者基础数据外，还需要管理:参与者所登记的轮班、轮班日期、时长、教练的姓名和医生（如在场）的姓名。该功能使用原本应用程序中已经可用的功能：选择轮班。用功能键将激活这些功能，并最终生成错误/结果消息。The user also needs to be able to issue at the end of the course a certificate of attendance to all participants enrolled in an excursion. The information to manage, in addition to the participant master data, are: the excursion shift the participant is enrolled in, the date of the excursion, the duration, the name of the instructor and of the doctor if present. For Shift selection the List box already available in the basic application will be used. A function key will activate the functions, and eventually generate an error/outcome message.

==== RF06 ====
用户还需要能够向合同员工颁发“教员身份参与证书”，其中的信息除了基础数据外还包括:轮班ID、教练ID、出游日、船医(如果有的话)。对于轮班选择，将使用原本应用程序中已经有的列表框。用功能键将激活这功能，并最终生成错误信息/结果。

The user also needs to be able to issue a '''Certificate of participation as instructor''' to Contractors, in which the information will be, in addition to master data: Shift ID, Instructor ID, excursion date, ship doctor if present. For Shift selection the List box already available in the application will be used.A function key will activate the functions, and eventually generate an error/outcome message.

==例子二： 答案与解读==
RF02 变动了潜水设施的内容，所以设施实体有变更。<br>
因为设施的信息有变更，导致跟这实体相关的行为，包括新增、编辑、和展示这三行为都会有变更。

另外加了两个要管理的实体：
#参与者
#短途潜水

不需要合同员工的删除功能，所以是个行为删除。

在参与者的管理，除了增加，改动，展示和删除四个功能以外，还有可以挑选参与者的下拉框功能。

两个证书的功能
#给教练的证书
#给参与者发证书

对应每个短途潜水也需要有添加、改动、展示、删除的四功能。
那个删除轮班功能也被删掉了。

增加了两个实体 --参与者 与 短途旅行登记<br>

Q: 为什么短途旅行登记算一个实体？<br>
A: 因它包括的信息都不能归入已有的 【参与者】 【合同员工】  【设施 】【轮班】实体里，例如那位参与者参加了那个班，考试分数等。 也可参考IFPUG关于ILF/EIF (实体)的识别要求；必须符合以下条件：
#数据的集合必须是逻辑相关的并且是用户可以识别
#这些数据或者控制信息必须是在本应用的边界内被维护

总结：
*实体方面增加了2 实体; 设施实体有变更。
*行为方面主要的在旅行方面增加了4 增删改查的功能和。5 参与者的功能(因为在里面加了一个下拉框功能)，增加了2 证书功能。改动了设施的增加、编辑、和展示，三个行为，删掉了两个行为。

所以动态功能点是增加的功能点64.6 (=2x7 +(4+2+5)x4.6)，变更 20.8 (=3x4.6)，删除9.2 (=2x4.6)，总共的动态简化功能点 94.6。

静态功能点依据上面练习一那的131.4，加上增加的功能点 64.6，减掉 删除功能点 9.2，得出变更后静态功能点 186.8。

[[文件:Ex2XlsScreenshot 2022-04-05 143941.jpg|550px]]

[[文件:Ex2XlsPt2of2Screenshot 2022-04-05 143941.jpg|550px]]

[[文件:微信截图 20210412093632.png|600px]]

[[文件:微信截图_20210412093858.png|600px]]



===计算功能规模===

:::ESFP = ADD + CHG + DEL + CFP

因为有数据转换：初始填充课程参与者信息作为一个基本过程，所以 CFP=4.6
:ESFP = (64.6 + 20.8 + 9.2) + 4.6 = 94.6 + 4.6 = 99.2 SiFP

软件开发后的静态功能点： ASFPA = ASFPB + ADD - DEL = 131.4 + 64.6 - 9.2 = 186.8 SiFP


==与国际功能点(IFPUG)的偏差==
例子：
*新开发某会计付款系统
*实体: 包括管理 发票 ，付款，供货商。 
*行为：包括对每个实体的展示，增加，修改，和删除/取消
*使用IFPUG 数 EI, EO, EQ, ILF, EIF 每类的调整前功能点数，加起来得出调整前功能点数FP=82 (如想多了解IFPUG如何计算复杂度，参考附件）
*使用SiFP　估算实体和行为数，计算得出　FP=104

[[文件:FPA S11.jpg|500px]]

*IFPUG / SiFP 得出的实体数量，与行为数量都一样　（实体(=ILF+EIF)=5　　行为 (=EI+EO+EQ)=15）
*因为简化功能点只是不区分实体与行为的复杂度(高中低)，取平均值，原理一样，虽然个别估算有差异，但平均下来与IFPUG的估算没有结构性偏差



=练习题=
==3.旅游服务-开发项目Tourist Services - Development Project==
===Description===
Wonder Travel公司计划将其行程(Trips)管理系统自动化，该系统将连接各旅行预订系统 (travel Booking systems) 和行程路线(PV)系统。<br>
The Wonder Travel company plans to automate its travel package (Trips) management system, which will interface the travel Booking systems and the Trip Routes (PV).

===Functional requirements===
该系统将由基于菜单界面的在线组件和定期运行的批处理组件组成。<br>
The system will consist of an online component based on a menu interface and a batch component that will run periodically.

====RF01====
将使用行程包的行程码(ID)作为索引,存储数据。<br>
行程(Trips)包括:
*行程码(ID)
*行程路线编号(PV)
*符合资格的导游姓名
*行程类型(汽车、巴士、火车、飞机、游轮、混合)
*计划版本数
*版本频次(月、季等)<br>

用户将从下拉列表中选择行程路线编号(PV code) （来自行程路线(PV)文件），系统会 自动生成行程码 (Trip code)。
行程路线 Trip Routes (PV) 文件包含旅游区域(例如:北欧、北极、突尼斯、土耳其、希腊、美国、古巴和加勒比地区、日本、中国、埃及……等等,信息都是由外部系统管理。<br>
从导游注册文件中获得有资格的导游的名字，然后利用下拉列表来设置哪位导游有资格带哪个行程(Trip)。<br>
版本状态字段将自动设置为“planned”（已策划）<br>
行程类型将通过一个下拉列表来设置一些值，如“文化”或“休闲”或“宗教”等
使用功能键 （function key）完成验证、一致性检查(编辑)和写入输入的数据,系统会按需要报错。<br>

The travel package data will be stored in a Trips file using the Trip code as the primary key.<br>
The Trips will be entered using the following fields:
* Trip code (ID)
* Trip Route code (PV)
* names of tour guides qualified for the trip
* trip type (by car, bus, train, airplane, cruise ship, mixed)
* number of planned editions
* frequency of editions (monthly, quarterly, etc.)<br>
The Trip code will be set automatically while the PV code will be selected from a drop-down list derived from the Trip Routes (PV) file that contains the planned tourist areas (e.g.: Northern Europe, North Pole, Tunisia, Turkey, Greece, United States, Cuba and the Caribbean, Japan, China, Egypt, etc), managed externally.<br>

The names of the Tour Guides qualified to make that kind of trip will be set using a selection from a drop-down list obtained from the Guides Register file.<br>
The Edition status field will automatically be set to the value "planned".<br>
The trip type will be set using a selection from a drop-down list showing some valid values such as "cultural" or "pleasure", or "religious".<br>
A function key will allow validation, congruence check (editing) and writing the entered data. Error messages are generated if required.<br>

====RF02====
基于行程码(ID) (Trip code) 和功能键选择 Trips<br>
Trips将显示与上一段中包含的相同数据，以及从PV文件中提取的数据，以及从RF07段中提到的导游注册文件中提取的导游的详细数据。<br>
与前一节相同的Trips下拉列表将用于帮助用户进行选择。<br>
如果trip文件中不存在搜索的行程码(ID)，系统将报错。<br>

The Trips will be displayed with the same data contained in the previous paragraph and also with the data extracted from the PV file and the detail data of the Guide extracted from the Guides Register file mentioned in paragraph RF07. The selection will be based on the Trip code and a function key.<br>

A Trips drop-down list identical to that of the previous section will be available to assist the user's selection.
The system will generate an error message if the trip code does not exist in the Trips file.

====RF03====
RF01中包含的所有字段都可以修改 - 除了行程码(ID)(因为它是作为索引)。<br>
版本状态字段只能通过 选择下拉列表中来更改, 只可以更改 包含“已提供 provided”和“已删除 deleted”值的内容。<br>
无论如何，如更新版本状态字段将会自动更新:<br>
* 余下可提供的版本数##<br>
::(## 计划可提供版本数，减去已提供/删除的版本数)<br>
也可用与RF01中相同的导游下拉列表挑选导游。<br>
使用功能键 （function key）完成验证、一致性检查(编辑)和写入输入的数据,系统会按需要报错。<br>

All fields contained in paragraph RF01 can be modified except the Trip code (since it is the key of the Trips file).<br>
The edition status field can only be changed by making a selection from a programmed drop-down list containing the values "provided" and "deleted".<br>
In any case, changing the Edition status field will be automatically update the field:<br>
* number of editions to provide<br>
subtracting the number of editions provided and/or deleted from the number of editions planned.<br>
The same drop-down list of the Guides mentioned in paragraph RF01 will be available.<br>
A function key will validate and write the data. Error messages are generated if required.<br>

====RF04====
选择行程码，按下功能键，即可取消行程。<br>
使用RF01中提到相同下拉列表，来选择要删除的行程。如果Trip文件中不存在该行程码(ID)，系统将报错。<br>
也有取消确认消息。<br>

A Trip can be cancelled by selecting the Trip code and pressing a function key.<br>
The same drop-down list of Trips referred to in paragraph RF01 will be available to select a trip to be deleted. If the Trip code does not exist in the Trips file, the system will generate an error message, and a cancellation confirmation message.<br>

====RF05====
用户将能够查看属于某个行程路线(PV)的旅行版本的信息。用户必须输入行程码(ID)(Trip code) 并按下功能键。选择的行程版本将显示以下数据:<br>
*行程码(ID)
*行程描述
*PV号
*PV描述
*导游姓名(所有符合资格的导游)
*导游资格(所有有资格参加本次旅行的导游)
*计划的版本数
*版本的频率
*提供的版本数
*每个版:
**版ID
**版日期
**版状态(已计划/提供/删除)
**已选择的导游<br>
行程描述和PV描述数据是从PV文件中提取。
用户也可以要求打印显示的信息。<br>

The user will be able to view information about Trip editions that belong to a certain Trip Route (PV). The user will have to enter the Trip code and press a function key. The Trip editions selected will be displayed with the following data:<br>
*Trip code
*Trip description
*PV code
*PV description
*Guide name (all guides qualified for this trip)
*Guide qualification (all guides qualified for this trip)
*number of editions planned
*frequency of editions
*number of editions to provide
*for each edition
**edition ID
**edition date
**edition status (planned/provided/deleted)
**selected guide<br>
The Trip description and PV description data is extracted from the PV file. The user can also request printing the displayed data.

====RF06====
由于WonderTravel提供的旅行具有季节性，通过选择行程代码(必须存在于旅行文件中)并输入版本日期(必须大于第一次输入的版本日期)来生成行程的版本。系统会自动生成唯一的版本码。版本的日期考虑了季节性相关的选择。<br>
版本状态字段会自动设置为“planned”。一个功能键将激活数据的写入。如果需要，将生成错误消息。<br>

Due to the seasonality of the trips offered by Wonder Travel, the editions of a Trip are generated by selecting the Trip code (that must be present in the Trips file) and entering the date of the edition (must be a date greater than the edition date entered the first time). The system will automatically generate a unique edition code. The dates of the editions take into account seasonality related choices.<br>
The edition status field will automatically be set to the value "planned". A function key will activate the writing of the data. Error messages are generated if required.

====RF07====
有关导游的信息将以导游的姓名作为索引保存在导游登记簿中。<br>
Information about Tour Guides will be kept in a Guides Register using the Guide's name as the primary key.

====RF08====
使用导游的姓名和功能键选择 ， 便可以显示导游信息。如果导游登记簿指南中不存在该导游，系统将生成一条消息。下拉列表与RF01的导游下拉列表相同。<br>
The data of the Guide can be displayed. The selection will take place using the name of the Guide and a function key. The system will generate a message if the Guide does not exist in the Guides Register. The same drop-down list of Guides as in paragraph RF01 will be available.

====RF09====
除了导游的名称(因为它是索引)，导游数据都可以更改。<br>
可用于与RF01段相同的导游下拉列表，选择要修改数据的导游。<br>
使用功能键 （function key）完成验证、一致性检查(编辑)和写入输入的数据,系统会按需要报错。<br>
Guide data can be changed, except for the name of the Guide (since it is the key of the Guides Register file).<br>
The same drop-down list of Guides as in paragraph RF01 will be available to select the Guide to change.<br>
A function key will allow editing and saving the data. Error messages are generated if required.<br>

====RF10====
输入的旅行文件数据将通过一个文件发送到后台预订系统，更新 行程(Trips) 。信息来自行程(Trips) 文档及导游登记册(Guides Register) 。<br>
The data entered in the Trips file will be sent via a file to the Booking System to the Trip periodically. The information will be obtained from the Trips file and from the Guides Register.

[[文件:Sifp 3 1.png]]

[[文件:Sifp 3 2.png]]

==4.旅游服务- FEM项目 Tourist Services – FEM Project ==
===Description===
基于以上例子3的旅游服务系统的基础上，提出以下软件功能增强与维护(FEM)<br>
With reference to the previously measured Tourist Services system, a Functional Enhancement Maintenance (FEM) Project for the Software is proposed.

===Functional requirements===

===RF01===

功能增强维护后，行程(Trips)管理系统必须显示在PV文件中旅行国家的当前政治局势的信息。<br>
Information about the current political situation of the countries included in the trip in the PV file must be displayed, following functional enhancement maintenance of the Trip Routes system

===RF02===
有关导游经验的信息必须在导游登记档案的旅游领域(tourism)中处理。<br>
Information about the experience of the tour guide must be handled in the tourism field in the Guides Register file.
===RF03===
必须提供用户最多选择的行程/旅行套餐的统计数据。<br>
Statistics about the travel packages most chosen by users must be provided.
===RF04===
行程/旅游套餐必须送到相关政府部门备案。<br>
Travel Packages must be sent to the Ministry of Foreign Affairs



:::---===< END >>>===---
:::---===<<< END >>>===---

==名词解释==

===维护===
术语“维护”指通过基本过程增加、修改或删除数据的能力。


<big> '''为什么使用它？''' </big><br>
很多敏捷团队采用传统故事点的方式来估算项目规模的大小，该方式的弊端是故事点没有明确的定义，导致A团队的故事点不等同于B团队的故事点。不仅仅是团队基线无法比较，因为故事点没有明确定义，规模估算的结果也不能与行业标杆对比，所以越来越多的软件开发公司采用功能点的方法进行估算和结算。

国际功能点 (IFPUG 或 NESMA)方法需要根据功能需求的详细内容来计算，但是在软件开发过程的初期，并没有这些细节，难以做估算，所以通常采用简化的功能点方法进行估算。SiFP 因为简化了，所以能更快速、方便地算出功能点，也解决了有些人对国际功能点方法步骤太繁锁的一些诟病。
<br>
简化功能点虽然跟国际功能点相比有误差，但因为敏捷开发不同于瀑布式开发，不需要一次性估算整个项目（可能3-4个月）的规模，而是用它来估算每个迭代（2-4周）的规模，所以误差的影响相对就小了。

<big> '''它是做什么的？''' </big><br>
应用软件开发的客户需求可分成三类：
#功能性需求
#技术需求
#质量需求

第二类和第三类归为非功能性需求。功能点主要是针对功能性需求，目的是提供对客户有意义的功能点数，来客观地衡量软件规模。

<big> '''该如何去做？''' </big><br>
简化功能点(SiFP)的两个主要数据：
#实体 (逻辑文件)
#行为（基本过程)

下面是计算简化功能点的例子：


=步骤=
简化功能点估算步骤：
#确定功能点分析类型
#识别分析范围和应用边界
#计算数据类型功能点(Data Function)用以判断它们对未调整功能点的贡献
#计算交易类型功能点(Transaction Function)用以判断它们对未调整功能点的贡献
#计算功能点

==3种SiFP计算类型==
*开发(Development )
::DSFP = ADD + CFP
*应用 (Application   or Baseline after the initial development)
::ASFP = ADD
*更新/增强功能与维护 (Enhancement)
::ESFP = ADD + CHG + DEL + CFP

{| class="wikitable"
|
:::ADD 新增
:::CFP 数据转换，包括新建系统首次设定数据
:::CHG 变更
:::DEL 删除
|}



[[文件:功能点计数P62 2.0.jpg]]

==名词解释==

===维护===
术语“维护”指通过基本过程增加、修改或删除数据的能力。

===用户可识别===
用户可识别指数据或事务需求是被用户和软件开发人员双方共同认同并理解的。
例如:用户和软件开发人员双方都认同人力资源应用有维护和存储员工信息的功能。

===逻辑文件LF===
'''(下面在计算实例里简称“实体”，方便理解)'''

用来储存内部或外部数据，是用户可识别的逻辑相关的数据组或控制信息组，在被度量应用边界内部维护。

====注意====

逻辑文件包括两类不同的用户需求数据：
#功能性数据
#非功能性数据
功能性数据是用来满足用户功能需求的数据。例如，销售、银行账号、供应商、人员等信息。<br>
非功能数据主要是为了满足易用性等，例如沙拉菜单数量的上下范围、可输入的可选数据等；或性能方面，数字查询输入的参数；或可维护性，例如配置参数等的。<br>
只有第一类功能性数据才算是逻辑文件。<br>

===基本过程 Elementary Process EP===
'''(下面在计算实例里简称“行为”，方便理解)'''

基本过程是对用户有意义的最小活动单元。例如:添加员工的用户需求包括建立工资和家属信息。只有添加所有员工信息,才能创建员工信息记录。单独添加一些信息使添加员工业务处于不持续状态,只有员工工资和家属信息都添加后,这个活动单元才能完成且业务处于稳定状态。

===识别基本过程===

为了识别基本过程，需要执行以下活动:
*把功能用户需求分解为最小活动单元,使其满足下面条件:
**对用户有意义<br>例如:功能用户需求要求在应用中添加新员工的能力。<br>
**构成一个完整的事务<br>例如:用户定义的员工信息包括工资和家属信息。如果家属人数大于零,添加员工信息时必须包括家属信息。本例中,添加员工信息(不包括添加地址、工资和家属信息)不满足本规则。<br>
**自包含<br>例如:除非输入所有的必需信息并且完成所有处理步骤,如验证、计算、更新ILFs,添加过程才是自包含的。<br>
**让应用程序的业务保持持续状态<br>例如:添加员工的用户需求包括建立工资和家属信息。只有添加所有员工信息,才能创建员工信息记录。单独添加一些信息使添加员工业务处于不持续状态,只有员工工资和家属信息都添加后,这个活动单元才能完成且业务处于持续状态。<br>

识别活动单元为基本过程需要满足以上所有规则。<br>

===识别基本过程主要目的===

基本过程的主要目的可识别为下列情形的一种:
*改变应用行为
*维护一个或多个ILFs
*呈现信息给用户

=实例1：识别基本过程 (EP elementary process)=
下面是某预约网约车过程：

[[文件:sifp p50图.jpg|600px]]

#预约申请
#接收预约
#检查是否有可用的车/司机
#寻找其他可选
#提供预约信息
#处理预约
#分派司机
#接乘客
#完成预约请求

==分析能否满足所有 EP 识别规则，判断能否独立成为基本过程 (EP elementary process),部分例子 ==
===预约申请===
#是否对用户有意义，客户功能需求的一部分？'''是'''
#是否构成一个完整的事务？'''否'''：预约申请本身不是一个完整的交易，因为过程必须也包括预约请求信息，收到其它可选的档期这些步骤，都不可以分离。
#是否自包含，可以独立存在？'''否'''：例如，接受预约申请；查看是否有档期，查看有没有其它接近的档期等，都是一些必须的相关步骤去完成这个基本过程。
#是否让应用程序达到稳定状态？'''否'''：整个业务需求只能在收到预约信息，发送、接受、处理、反馈给客户才算是完成稳定状态。

===分派司机===
#是否对用户有意义，客户功能需求的一部分？'''是'''
#是否构成一个完整的事务？'''是'''：分配到司机是一个完整的交易，包括收到司机的确认，把信息记录在系统中并通知司机。
#是否自包含，可以独立存在？'''是'''：分配到司机本身可以独立存在。
#是否让应用程序达到稳定状态？'''是'''：因为当司机被分配后，是完全满足业务的需要。

===接乘客===
#是否是客户功能需求？'''是'''
#交易是否完整？'''否'''：接乘客本身不算一个完整的交易，因为预约系统必须也记录这个信息。
#是否自包含，可以独立存在？'''否'''：确认预约申请是下面一个必须执行的过程，来完成这个基本过程。
#是否让应用程序达到稳定状态？'''否'''：整个业务需求只能在和预约系统确认沟通，已经接到乘客，然后系统也把记录更新到预约系统才算完成。





{| class="wikitable"
|-
! 业务过程/活动 !! 基本过程 (EP elementary process) 必须满足所有 EP 识别规则
|-
|
*预约申请 
*接收预约 
*检查是否有可用的车/司机 
*寻找其他可选 
*提供预约信息 
||
如果单独来看每个活动，不能满足基本过程的条件。它们必须要结合在一起，才能满足所有基本过程的条件。基本过程包括左面所有过程/活动。
Individually these activities do not meet all EP identification rules. 

They only satisfy all EP identification rules and fulfill the complete business need when combined. The EP is composed of the processing logic of all these business process activities.
|-
| 
*处理预约 
|| 
这业务流程、活动满足所有基本过程的要求，可以当成一个基本过程。
This business process activity meets all EP identification rules in itself and constitutes an EP.
|-
| 
*分派司机  
|| 
这业务流程、活动满足所有基本过程的要求，可以当成一个基本过程。
|-
|
*接乘客 
*完成预约请求 
||
如果单独来看每个活动，不能满足基本过程的条件。它们必须要结合在一起，才能满足所有基本过程的条件。基本过程包括左面所有过程/活动。

|}


==1.潜水学校:开发项目 EXAMPLE Diving School: Development Project==

===描述===
一所潜水学校需要一套用来管理合同员工（教练）、设施、轮班工作的系统。目的:有效地管理教练在潜水设施和几艘旅游潜水船上有关潜水课程/短途潜水的轮班工作。A diving school requires a system for managing their information: contractors, facilities, working shifts to effectively manage the coverage of shifts by the instructors that are available at the diving facilities and aboard several boats for touristic dives and diving courses.

===功能需求===

====RF01====
为处理教练保险单文件，并符合法例，学校需要为每个合同员工储存以下资料:
*序列号（独特，作为索引, 不能重复）
*姓名
*居住地址
*城镇
*邮政编码
*电话号码
*是否持有航海执照

To handle the documentation for the insurance policies of the instructors and to be in compliance with the current legislation, the school needs to store the following information for each Contractor:
*unique serial number
*first name and last name,
*address of residence,
*town of residence,
*postal code of residence,
*telephone number,
*whether in possession or not of nautical licence.

为了跟踪每个合同员工的“职业生涯”，学校决定给予他们以下分类:
#“潜水长”
#“助理教练”
#“教练”

In order to keep track of the 'career' of each Contractor, the school decided to associate with them a category, which can take the following values:
# "Dive-master"
# "Assistant Instructor"
#"Instructor"

这些分类是固定的，并不会随着时间而转变:每个合同员工会按顺序分配到合适的类别，代表个人“职业生涯”的发展(例如，一个新员工开始是“潜水长”，随着时间的推移，他会成为“教练”)。These values are fixed and are not expected to change over time; they can be assigned to each Contractor sequentially and represent the progress of 'careers' within the school (e.g. a new employee starts as "Dive-master" and advances over time to become "Instructor").

使用表单输入，显示，编辑和删除合同员工的数据。会有一个独立列表框，显示序列号、名和姓 （但没有附件明细），来选择要编辑、删除或详细查看的是哪位员工的数据。

Forms must be created for entry, display, editing and deletion of Contractor's data. In order to select the occurrence of data to edit, delete or view in detail, there will be an independent list box of items without accessory details: Serial number, Name and Surname.

用功能键激活所有的功能，并最终产生一个结果或错误信息。“删除合同员工”只是在逻辑上删除，没有数据会被物理删除，但会被标记为作废。只要有与其相关的工作班次，合同员工就不能被删除。

A function key will activate all the functions, and eventually generate an error/outcome 
message. The deletion of a Contractor is only a logical one: no data will be physically deleted, but will be labeled as obsolete. A Contractor cannot be deleted as long as there are working shifts associated with it.

====RF02====

学校还需要管理设施(“潜水”、“船”或“橡皮艇-RD”)，每一个设施都有独特的友好名称(例如:“潜水莫格利亚 diving_moneglia”、“潜水帕拉 diving_palau”、“蓝箭艇 blue-arrow-boat”、“格里大艇 goletta-boat”、“嘉莉花RD Genova_RD”等等)。

The school also needs to manage the Facilities ("diving", "boat" or "rubber dinghy - RD"), to each of which a unique friendly name is associated (for example: “diving_moneglia”, “diving_palau”, “blue-arrow-boat”, “goletta-boat”, “Genova_RD” and so on).

对于每种类型的设施，必须存储以下信息:
*设施识别名（独特，作为索引,不能重复）
*描述
*类型
*它能容纳的人数
*可用汽缸数
*是否有厕所
*是否有饮用水储备

For each type of facility, the following information must be stored:
*unique identifier of the Facility
*description
*type
*number of people it can host
*number of available cylinders
*presence or absence of portable toilet
*presence or absence of drinking water reserve.

必须创建表单来输入、显示、编辑和删除设施数据;如果有被分派到轮班，就不能删除设施。使用独立的列表（不显示附件细节），以便选择要编辑、删除或详细查看的数据，列表只展示：标识名称、描述、类型<br>
用功能键来激活某功能，并最终生成错误或结果信息。

Forms must be created for entry, display, editing and deletion of Facility data; a Facility cannot be deleted if there are active shifts. In order to select the occurrence of data to edit, delete or view in detail, there will be an independent display of the list of items without accessory details: Identifier, Description, Type.   A function key will activate all the functions, and eventually generate an error/outcome message.

====RF03====

最后，为了有效管理分派轮班(shift)的覆盖范围，学校需要处理合同员工以下轮班(shift)信息:
*工作轮班识别名（独特，作为索引,不能重复）
*可用的合同员工编号(使用下拉框挑选)
*提供本轮班可用的日期
*可用期的开始日期
*可用期的结束日期
*首选设施(使用下拉框挑选)
*状态(最初预设置为“预计轮班”)

Lastly, in order to effectively manage shifts coverage, the school needs to handle the 
following shift availability information of Contractors:
*unique identifier of the working shift
*serial number of the Contractor who is available (using a combo-box),
*date on which availability was provided,
*start date of the availability period,
*end date of the availability period,
*preferred facility (using a combo-box) 
*status (initially set to "tentative shift").

必须创建表单来输入、显示、编辑和删除轮班(shift)的有效信息。为了方便选择对哪些数据进行编辑、删除或查看详细信息，会独立显示没有附件细节的数据列表（如，不显示可用性标识号，合同员工序列号）。用功能键将激活这功能，并最终生成错误/或结果信息。

Forms must be created for entry, display, editing and deletion of Shift availability data. In order to select the occurrence of data to edit, delete or view in detail, there will be an independent display of the list of items without accessory details: Availability identifier, Contractor serial number.   A function key will activate all the functions, and eventually generate an error/outcome message.

====RF04====
每个合同员工可以提供不止一个可用轮班(availability)，每一个轮班最初都设定为“预计轮班tentative shift”状态。当分配协调各合同员工的可用轮班作为一个“轮班（shift）”内的可用资源时，秘书处在一个“分配轮班 assigned shift”内使用特定命令选择(转换)所需的可用轮班(availability)，她可以更改潜水期的开始和结束日期，并可以将之设定为“分派轮班”状态。删除“分派轮班”与删除“预计轮班”的功能/步骤类似。

Each Contractor can provide more than one availability, each one initially in "tentative shift" status. When consolidating an availability within a "shift", the Secretariat select the desired availability and transform it using specific command in a "assigned shift"; he/she can change the start and end dates of the dive period, and can assign the status of "operating shift" to the availability. To delete an operating shift after consolidation, the same function to delete a tentative shift can be used.

====RF05====

有以下查询:
#找出合同员工中谁已经有许可证，因此能够以“船夫”的身份带队出海 - 显示属性:序列号。姓和名，和总人数。
#选择当前某月份(或其他月份和年份)收到的所有可用合同员工——显示的属性:序列号、姓名、类别、可用期的开始日期和结束日期以及对设施的偏好。
#根据档案中设施的数量和类型，(包括考虑潜水和船数量)计算学校管理的最大人数。
#计算每个类别的员工人数(潜水主任;助理教练；教练）:按类别列出总计和小计。
#通过显示姓名和姓氏，显示最“忠诚”的员工，即年初以来提供最多可用时间段的前三名员工。
#上面查询4的增强版： 通过类别细化——换句话说，不仅仅是显示数量，可选择某个类别的相关合同员工列表(姓和名)与其总数量。

The following queries are defined and required to:
#Find out who, among the Contractors, already has a license and is therefore able to handle excursions at sea as "boatman" – attributes displayed: serial number, first name and last name, total.
#Select all availabilities of Contractors received for any month of the current year (or other month and year) – attributes displayed: serial number, first name and last name, category, start date and end date of the availability period, and facility preference.
# Calculate which is the maximum number of people managed by the school (considering both the dives and the boats), depending on the number and type of facilities in the archive. 
#Calculate the number of employees in each category (Dive-master; Assistant instructor; Instructor) present in the archive – total and subtotal by category.
#Select, by displaying first name and surname, the most "loyal" employees, i.e. the first three that have provided more availability since the beginning of the current year.
#An enhanced version of query 4 (above), parametric by category – in other words the capability of selecting a single category to display the list of Contractors (First name and last name) in addition to their total.

==练习一： 答案与解读==
共三个实体：
#合同员工
#管理设施
#轮班

你可能会问：那些合同员工的职称是否也应该是一个实体？（因需要花工夫开发）<br>
这不应该是一个实体，原因：人员的职称必须依赖人员的信息挂在一起，不可以独立存在，就好比我们要维护员工信息，假如也要维护员工的家属信息，这个家属信息就不能算另外一个实体，因为没有人员的话，家属是不能单独存在的。原则：不是根据是否要产生开发的工作量，而是从用户角度看，这个实体能否独立存在和维护。否则功能点的估算就只是根据个人对开发工作量的估计，而不是从用户角度看功能的客观判断。

每个实体对用户来讲，都有新增、展示、修改、删除4个功能。在人员管理里，还有一个功能是显示一个可选的列表，方便用户选择，这功能是增查改删以外的第五个功能。

设施管理也同样有这个列可选设备设施的一个展示框这第五个功能。

在轮班管理里面，除了增加、查看、修改、删除和展示外，它里面有两个下拉框功能：
#让客户挑选相关设施的 Combo-box下拉框
#让客户选人员的框

你可能会问，这 2 个下拉框功能是否不应该算额外的功能，而是属于“轮班”的增删改查基本功能的一部分？<br>
我们可以这样想：从用户的角度来看，如果没有这两个下拉框的功能，基本的增删改查功能是否可以实现；现在做了两个下拉框的功能，是额外的新增功能，更方便用户去选择，所以这两个算是额外两个功能。

也可参考IFPUG关于EI/EO/EQ 的识别要求；基本操作(elementary process)必须符合以下三条之一：
#使用独特处理逻辑，与应用中其他‘行为’（EI/EO/EQ） 的处理逻辑不同
#在该处理中识别出来的数据元素是与应用中其他‘行为’（EI/EO/EQ） 的数据元素不同
#在该处理中引用的‘实体’（ILF 和EIF） 与其他‘行为’（EI/EO/EQ） 所引用的不同

它要列出所有合条件的数据元素进这下拉框，类似一个新的报表，所以算一个行为。基于同类原因，挑选相关设施的 Combo-box 下拉框,选择可用合同员工 Combo-box 下拉框, 等各自也算一个行为。

在轮班里，还有一个展示可选的轮班功能，另外是分配轮班功能。还有最后的 RF05 六个查询功能。

得出共 24(=5+5+6+2+6)行为，加 3实体, 所以按简化功能点每个实体 x7，每行为 x4.6 得出，共新增131.4(=3x7+24x4.6)简化功能点，详见下面列表：

[[文件:Ex1SoluScreenshot 2022-04-05 115926.jpg|500px]]

[[文件:微信截图_20220412130822.jpg|550px]]

[[文件:微信截图 20210330152654.png|600px]]

[[文件:微信截图 20210330152702.png|600px]]


===计算功能规模===

:::DSFP = ADD + CFP

因为没有数据转换，所以 CFP=0， 所以 DSFP = （110.4+21） +0 = 131.4 SiFP

因是首次开发， ASFP = ADD = 131.4 SiFP


==2.潜水学校:FEM项目==
=== 描述 ===
参照之前的潜水学校系统，对功能进行了增强，并提出了该软件的功能优化维护项目(FEM)。With reference to the previously measured Diving School system, a Functional Enhancement Maintenance Project (FEM) for the Software is proposed.

=== 功能需求 ===
==== RF01 ====
用户想要取消合同员工删除功能。The user wants to eliminate the Contractor delete function.

==== RF02 ====
在短途潜水里， 在潜水设施管理中能管理船上医生的存在或缺失。The presence/absence of a ship doctor during excursions must be managed in the file DIVING FACILITIES.

==== RF03 ====

出于税收和安全原因，不再需要删除可用轮班这项功能 For tax and safety reasons the function to delete availability shifts will no longer be required.

==== RF04 ====
用户还需要管理课程参与者信息和他们参加的那个短途潜水信息：<br>
*管理参与者的信息包括:参与者ID，姓，名，出生日期，潜水执照，执照日期。<br>参加短途潜水:参与者ID。轮班编号，出游日，天数，最终考试是/否通过<br>
*用列表框 （包括：参与者ID，姓，名）来选择轮班中的参与者。<br>
*使用原本应用程序中已经有的列表框选择轮班。<br>
*用功能键将激活这功能，并最终生成错误信息/结果。

用功能键初始填充课程参与者信息，参与者信息源自以前参与者信息的备份数据。

The user also needs to manage the information of course Participants and their enrollment in the excursion. The information managed will be 
for Participants: Participant ID, LastName, FirstName, Date of Birth, diving license, license date. To enroll in the excursion shift: Participant ID, Shift ID, excursion date, duration, final examination passed (YES/NO).Selection of the participants in an excursion shift will be obtained by List Box on the Participant file, containing Participant ID, FirstName, LastName. For Shift selection the List box already available in the basic application will be used. A function key will activate the function, and eventually generate an error/outcome message.

A functionality will be provided to populate initially the participant's file with an already existent archive of past participants.

==== RF05 ====
用户还需要能够在课程结束时颁发出席证书给在短途潜水中登记的所有参与者。除了管理参与者基础数据外，还需要管理:参与者所登记的轮班、轮班日期、时长、教练的姓名和医生（如在场）的姓名。该功能使用原本应用程序中已经可用的功能：选择轮班。用功能键将激活这些功能，并最终生成错误/结果消息。The user also needs to be able to issue at the end of the course a certificate of attendance to all participants enrolled in an excursion. The information to manage, in addition to the participant master data, are: the excursion shift the participant is enrolled in, the date of the excursion, the duration, the name of the instructor and of the doctor if present. For Shift selection the List box already available in the basic application will be used. A function key will activate the functions, and eventually generate an error/outcome message.

==== RF06 ====
用户还需要能够向合同员工颁发“教员身份参与证书”，其中的信息除了基础数据外还包括:轮班ID、教练ID、出游日、船医(如果有的话)。对于轮班选择，将使用原本应用程序中已经有的列表框。用功能键将激活这功能，并最终生成错误信息/结果。

The user also needs to be able to issue a '''Certificate of participation as instructor''' to Contractors, in which the information will be, in addition to master data: Shift ID, Instructor ID, excursion date, ship doctor if present. For Shift selection the List box already available in the application will be used.A function key will activate the functions, and eventually generate an error/outcome message.

==练习二： 答案与解读==
RF02 变动了潜水设施的内容，所以设施实体有变更。<br>
因为设施的信息有变更，导致跟这实体相关的行为，包括新增、编辑、和展示这三行为都会有变更。

另外加了两个要管理的实体：
#参与者
#短途潜水

不需要合同员工的删除功能，所以是个行为删除。

在参与者的管理，除了增加，改动，展示和删除四个功能以外，还有可以挑选参与者的下拉框功能。

两个证书的功能
#给教练的证书
#给参与者发证书

对应每个短途潜水也需要有添加、改动、展示、删除的四功能。
那个删除轮班功能也被删掉了。

增加了两个实体 --参与者 与 短途旅行登记<br>

Q: 为什么短途旅行登记算一个实体？<br>
A: 因它包括的信息都不能归入已有的 【参与者】 【合同员工】  【设施 】【轮班】实体里，例如那位参与者参加了那个班，考试分数等。 也可参考IFPUG关于ILF/EIF (实体)的识别要求；必须符合以下条件：
#数据的集合必须是逻辑相关的并且是用户可以识别
#这些数据或者控制信息必须是在本应用的边界内被维护

总结：
*实体方面增加了2 实体; 设施实体有变更。
*行为方面主要的在旅行方面增加了4 增删改查的功能和。5 参与者的功能(因为在里面加了一个下拉框功能)，增加了2 证书功能。改动了设施的增加、编辑、和展示，三个行为，删掉了两个行为。

所以动态功能点是增加的功能点64.6 (=2x7 +(4+2+5)x4.6)，变更 20.8 (=3x4.6)，删除9.2 (=2x4.6)，总共的动态简化功能点 94.6。

静态功能点依据上面练习一那的131.4，加上增加的功能点 64.6，减掉 删除功能点 9.2，得出变更后静态功能点 186.8。

[[文件:Ex2XlsScreenshot 2022-04-05 143941.jpg|550px]]

[[文件:Ex2XlsPt2of2Screenshot 2022-04-05 143941.jpg|550px]]

[[文件:微信截图 20210412093632.png|600px]]

[[文件:微信截图_20210412093858.png|600px]]



===计算功能规模===

:::ESFP = ADD + CHG + DEL + CFP

因为有数据转换：初始填充课程参与者信息作为一个基本过程，所以 CFP=4.6
:ESFP = (64.6 + 20.8 + 9.2) + 4.6 = 94.6 + 4.6 = 99.2 SiFP

软件开发后的静态功能点： ASFPA = ASFPB + ADD - DEL = 131.4 + 64.6 - 9.2 = 186.8 SiFP

==5.售票系统开发 Tickets Sale: Development Project ==
===描述 Description===

“票务销售(TS)”应用程序处理娱乐活动的在线票务销售。<br>
它有一个最终的用户界面和全国各地旅行社运营商的不同界面。<br>
所有的行政和会计任务都由一个单独的“后台办公室(BO)”应用程序处理。这两个系统通过交换适当的信息对接。例如，BO会发出关于更新演出日历文件的通知，并接收已售出和已发货的门票列表(见下一节RF03)。<br>

The "Ticket Sales (TS)" application handles on-line tickets sales for entertainment events.<br>
It has a final user interface and a different interface for travel agency operators throughout the country.<br>
All administrative and accounting tasks are handled by a separate "Back Office (BO)" application. The two systems interact by exchanging appropriate messages. For example the BO issues notifications concerning updating of the show calendar file and receives lists of tickets sold and to ship (see next section RF03).<br>





===功能需求 Functional requirements===

====RF01====
用户在选择一个节目/事件后，购买一张票，并在输入付款后确认。<br>

After selecting an event the user purchases a ticket and confirms it after entered the payment.

====RF02====
通过旅行社运营商进行的付款可以是现金或信用卡(后者，需要验证用户;如果没有注册，用户可以注册和管理自己的个人信息)<br>

Payment through the travel agency operator can be made in cash or by credit card (in the latter case user authentication is required; if not registered, the user can register and manage its profile)

====RF03====
付款后，就可以打印票了。打印出的票包括 - 节目/活动名称、购票者姓、价格、座位和出票旅行社服务代表的代码。<br>
当顾客在家或在自动售票亭使用系统时，可以输入希望寄送票的邮寄地址。<br>

支持文档如下:<br>
a)应用数据列表<br>
b)系统用例图<br>
c)购票用例图<br>

After payment, the ticket can be printed. The printed ticket includes the event name, name and surname of the purchaser, price, seats, and the code of the travel agency issuing the ticket.
When using the system from home or from a kiosk, the customer can enter the address of the place where they prefer the ticket to be sent.<br>
The supporting documentation is as follows:<br>
a) the list of the application data<br>
b) a use case diagram of the system<br>
c) a use case diagram of ticket purchase<br>

====a) 应用数据列表 List of application data ====

#日历(演出ID，演出类型，标题，说明，票价，地点，开始日期)
#票(演出ID，名，姓，TaxID，座位，购买日期，付款类型，总付款金额，卡号(如付款类型=信用卡)，安全码(如付款类型=信用卡)，送货，送货地址-街道，城市，省，地区-(如送货=邮寄)
#可选座位(演出ID，座位数，可选用座位)
#注册用户主数据(10个属性)
#信用卡(名、姓、TaxID、卡号、类型、到期日、状态(有效/禁用))
#旅行社机构(5属性)

#Calendar (EventID, Show Type, Title, Description, Ticket Price, location, Start date)
# Tickets (EventID, FirstName, LastName, TaxID, Seats, Purchase Date, Payment Type, Total Payment, CardNumber (if Payment Type = credit card), Security Code (if Payment Type = credit card), Delivery, Shipping Address - Street, City, Province, Region - (if Delivery = shipment)
# Seats available (EventID, Capacity, Seats available)
#Registered users master data (10 attributes)
#Credit cards (FirstName, LastName, TaxID, CardNumber, Type, ExpirationDate, Status (active/blocked))
#Agencies (5 attributes)

====b) 系统的用例图 System Use Case====

[[文件:SiFP 5-1.png|500px]]

====c) 购票的用例图 Ticket Purchase Use Cases====

[[文件:SiFP 5-2.png|500px]]


[[文件:微信截图_20220325125953.jpg|600px]]

[[文件:微信截图_20220325130021.jpg|600px]]

===计算功能规模===

:::DSFP = ADD + CFP

因为没有数据转换，则 CFP=0， 所以 DSFP = 76.4 + 0 = 76.4 SiFP

因为是首次开发，所以 ASFP = ADD = 76.4 SiFP

==6.售票系统功能更新 Tickets Sale: FEM Project ==
===描述 Description===
在上面票务销售系统的基础上，提出下面软件功能增强与维护(FEM)

With reference to the previously measured Ticket Sale system, a Functional Enhancement Maintenance (FEM) Project for the Software is proposed.

===功能需求 Functional requirements===
====RF01====
必须提供销售最多的不同演出类型门票的统计数据。

Statistics about the most sold tickets by Show type must be provided.

====RF02====
所有购票信息都必须每周发给会计系统。<br>

Every week all ticket purchases must be sent to the accounting system.


====RF03====
必须提供一个新功能 ： 取消在某个到期日期的所有票。

A new function to cancel all tickets expired at a certain date must be provided.

====RF04====
必须提供一个通过选择最后购买日期来删除所有注册用户的功能。

A function to delete all registered users by selecting the last ticket purchase date must be provided.

====RF05====
在票务印刷中还需要加上节目/事件的图像标志。

There is also the requirement to add the logo of the event in the ticket printing.

建议的解决方案如下:
#软件功能增强维护(FEM)项目的功能规模大小(functional size)
#维护后系统的新功能规模大小<br>

The proposed solution follows, including:
#The functional size of the Functional Enhancement Maintenance (FEM) project for the Software
#The new functional size of the system after the maintenance


[[文件:微信截图_20220325130307.jpg|600px]]

[[文件:微信截图_20220325130333.jpg|600px]]

===计算功能规模===

:::ESFP = ADD + CHG + DEL + CFP

因为没有数据转换， 则CFP=0， 所以 ESFP = 18.4 + 14 + 0 + 0 = 32.4 SiFP

软件开发后的静态功能点： ASFPA = ASFPB + ADD - DEL = 76.4 + 18.4 - 0 = 94.8 SiFP



==462==
客户预约请求到预约系统，提供信息，包括日期、时间、上车的位置和目的地；第二，预约系统收到客户预约请求，并把预约数据记录在数据库；三，预约系统。从预约数据库中查看是否有可选预约的数据，如果能找到合适的时间、日期，能配合预约请求的话，看看司机是否有空档？写是，如果状态是没有，预约系统继续在数据库搜索有没有接近的预期时间？否则写没有合适请求的出发地点和目的地。五，预约系统自动发出通知到客户，如果有合适空档或者提供接近的日期时间。六，客户回复预约系统：接受或拒绝，预约系统把反馈记录在预约数据库。如果反馈是接受，预约系统会继续统计客户详细预约信息。如果客户拒绝，预约系统就会回复收到，并终止过程。七，如果客户接受，预约系统会指派司机到确认的日期、时间，上车地点和目的地。预约系统把这个记录在数据库中，并发信息到被指派的司机；八，司机按约好的日期时间，上车的地点接乘客，然后发信息到预约系统，通知乘客已经上车，预约系统记录已经完成的整个过程到数据库中。

==463==
每个如果每个活动单独来看，不能满足基本过程的条件。它们必须要结合在一起，才能满足所有基本过程的条件。基本过程包括左面所有的过程逻辑和活动。第二，这个业务流程、活动满足所有基本过程的要求，可以当成一个基本过程。详见下表。最后和开头类似。是否客户功能需求的一部分？第二列是否一个完整的交易？请求预约本身不是一个完整的交易，因为过程必须也包括预约请求信息，收到其它可选的档期这些步骤，都不可以分离。第三列是否可以独立存在？例如，接受预约申请；查看是否有档期？查看有没有其它接近的档期等，都是一些必须的相关步骤去完成这个基本过程。最后一列，是否让业务的应用程序达到一个稳定的状态？否，整个业务需求只能在收到预约信息，发送、接受、处理、反馈给客户才算是完成一个稳定状态。


==464==
但是如果我们看分配司机这个过程：一、客户的功能需求是否是一个完整的交易？分配到司机是一个完整的交易，包括收到司机的确认，把信息记录在系统中并通知司机。是否是一个可以独立存在的过程？是，分配到司机本身可以独立存在。是否让应用系统转到一个稳定的、完整的状态？是，因为当司机被分配后，是完全满足业务的需要。去接乘客是否是客户功能需求？是。是否是一个完整的交易？否，接乘客本身不算一个完整的交易，因为预约系统必须也记录这个信息。是否是一个独立存在的过程？否，确认预约申请是下面一个必须执行的过程，来完成这个基本过程。是否让应用系统转到一个稳定状态？否，整个业务需求只能在和预约系统确认沟通，已经接到乘客，然后系统也把记录更新到预约系统才算完成。


{| class="wikitable"
|-
| ||colspan = "4"|Elementary Process identification Rules
|-
! Process !! Meaningful to the user !! Constitutes a complete transaction !! Self-contained !! Leaves the business of the application being counted in a consistent state
|-
|预约申请 Request Reservation 
|| 
Yes. Request Reservation is part of the Functional User Requirements.
||
No. Request Reservation alone is not a complete transaction because the process must also receive  request information, check availability, get alternative date/time and provide reservation information to the Customer. These steps cannot be logically separated.
|| 
No. Receive  request , check availability, get alternative date/time and provide reservation information are all subsequent processing steps necessary to complete the EP. 
|| 200 
|-
| 收到预约申请 Receive Reservation Request || 25 || 48 || 44 || 20
|-
| 检查是否有可用的 Check Availability || 35 || 32 || 38 ||30 

|}


{| class="wikitable"
|-
! Business Process Activities !!Identify an elementary process for each unit of activity identified that meets all of the EP identification rules
|-
|
*预约申请 Request Reservation
*接收预订 Receive Reservation
*检查是否有可用的 Check Availability
*有无其他可选 Get Alternative Time
*提供预定信息 Provide Reservation Information
||
Individually these activities do not meet all EP identification rules. 

They only satisfy all EP identification rules and fulfill the complete business need when combined. The EP is composed of the processing logic of all these business process activities.
|-
| 
*进程保留 Process Reservation 
|| 
This business process activity meets all EP identification rules in itself (see table above) and constitutes an EP.
|-
| 
*派出司机Assign Driver 
|| 
Individually these activities do not meet all EP identification rules (see table above). They only satisfy all EP identification rules and fulfill the complete business need when combined. The EP is composed of the process logic of all these business process activities.
|-
|
*接客人 Pickup Customer
*完成预订请求 Finalize Reservation Request 
||
Individually these activities do not meet all EP identification rules. They only satisfy all EP identification rules and fulfill the complete business need when combined. The EP is composed of the processing logic of all these business process activities

|}


==465==
为什么使用它？<br>
让团队用来估算软件功能的规模大小，也可以比较不同项目，让相互之间可比。<br>
它是做什么的？<br>
从软件功能需求估算规模大小，团队可以依据以往的生产率估算项目工作量的成本；功能点数也可以让项目之间比较，把不同项目自己的参数归一化。例如，我们不能比较项目之间不同的缺陷个数，但如果用缺陷个数除以项目的简化功能点，得出缺陷率，就可以比较。<br>
功能点估算从76年开始就有了，但一直因为估算过程比较复杂，没有在软件开发普及。以前一个瀑布式项目开发好几个月，呃必须要按照具体的需求，考虑各种复杂度，才能算出算出一个比较准确的功能点数。<br>
项目的早期很多功能需求的详细内容都未知，就不能传统IFPUG国际功能点法估算，但可以利用简化功能点按功能需求的实体和行为数，估算出一个简化功能点。虽然简化功能点与本来传统功能点有正负百分之十几的误差，但如果在敏捷团队，它只是先关注下一个迭代的规模数，误差就可以接受。<br>
由于简化功能不考虑每个行为的详细内容，也更方便项目做好前期的规模估算。那个时候，大家都不知道每个功能的详细内容，但还是可以有一个功能点数，从而可以大概估计工作量、进度等。虽然简化功能点有误差，但是它的平均估计值还是等同于传统的功能点估算，没有偏差。所以如果后面有了功能需求的详细内容，也可以用传统国际功能点，或者？？方式估算详细的功能点数，这是对原本简化功能点的一个更准确的细化。可以算是前面简化功能点估算的一个的延续。<br>


==v467==
？？国际功能点？？方法需要需求、功能需求的详细内容来计算，但尤其是在软件开发过程的早期，没有这些细节的话，或者在早期估算的话，就可以利用简化功能点。<br>
简化功能点虽然跟国际功能点相比有误差，但因为简化了，所以更快速，可以更方便算出功能点。很多敏捷团队使用传统故事点方式，估计项目规模大小，故事点的弊端是没有明确的定义，导致a团队的一个故事点不等同于b团队的故事点。不仅仅是团队基线无法比较，因为它没有明确定义，最后这个规模估算，也不能与行业标杆对比。所以越来越多软件开发公司使用功能点方法估算和结算。也有很多人觉得它步骤太繁琐，不好用。<br>
软件应用开发的用户需求，可换成三大类：一、功能性需求；二、技术需求；三、质量需求。第二类和第三类归为非功能需求。<br>
功能点，主要是针对功能性需求。它的目的是提供对用户有意义、功能数的一个客观度来衡量。简化功能点主要数两个数：一、实体；二、行为（基本过程）。<br>

==466==
应用软件系统的用户需求，各归纳成三类：<br>
一、功能需求<br>
二、技术需求<br>
三、质量需求<br>
第二和第三类也可以称为非功能。简化功能点，主要是针对b类功能需求。简化功能点的目是希望做出一个客观的度量，按照应用软件提供给客户的功能数。<br>
功能需求可分成三类：<br>
一、数据？？的需求<br>
二、数据处理<br>
三、数据存储<br>
简化功能点主要是针对第一和第三类需求。不包括数据的算法、简化等功能。所以假定是代表系统的功能点数，是与系统的逻辑交易数量和逻辑文档数量相关。<br>
步骤：<br>
先明确是下面哪一类的功能点：<br>
一、开发类项目<br>
二、上级类项目<br>
三、现有的软件产品或者第一轮开发出来的基线，然后明确系统的范围与边界，然后判断有哪些基本过程，计算出整个项目的简化功能点数<br>

[[文件:功能点计数过程.jpg]]

[[文件:功能点计数P62.jpg]]

[[文件:功能点计数P62 2.0.jpg]]


==506==
从故事点转简化功能点的常见问题：
#没有明确区分新的迭代怎么处理变更与删除，应该要明确动态功能点数，这是用来估算本本迭代的工作量，而静态功能点就是迭代后产品的功能点数。而且应该用表格形式把变更和删除累加在原本上一轮的功能上面，才可以更好看到迭代与迭代之间，功能上的变化
#没有弄清楚基本过程的概念，还是从工程师的角度，估计开发时间的工作量来判断是一个功能还是两个功能？在故事点用这种方式估算习惯，但因为功能点是要同一个功能上需求，不能有功能点数的差异，所以不能用估计开发难易程度来判断
#要了解基本过程的原则，我们可以用下面网约车的例子，基本过程不是随便定的，它有规则，比如从网约车案例我们可以看到，不是打电话去系统就是一个功能，可能很复杂，但是因为它不能独立存在，必须依赖其它的行为才算完整，所以当客户维护用户配置信息，他可会把常用联系人的分组拆分为好几个功能。例如我们要用系统打印一张机票，打印本身不能当成一个功能的基本过程，因为必须在系统里面产生这张机票，要一起才是对用户有意义。实体也应该用这个思路，假如我要在人事系统维护一个员工信息，其中有一个就是维护员工的家属信息，单独家属信息不能算是一个实体，它必须要和员工挂在一起才有存在意义。有这些规则，才可以让不同的人对同一套需求数出不同功能点数


以前以及使用估10點
我们以前一直使用过故事点，为了更好，做量化管理，我们新的项目开始启用，简化功能点

好的，看一下你的估算表
为什么这两个功能要分成两个行为？
日本有功能等复杂的也好很多工作量嗯以前故事一点的估算，我们是分成两个故事一点的

要注意在共同点估算
是否是一个行为，取决于他算不算是一个基本过程
如果能够俩成为行为互相依赖，不能单独作为基本过程，并不能不应该分开


{| class="wikitable"
|-
! 活动名称 !!描述
|-
|
'''预约申请''' Request Reservation
||
客户发出预约请求到预约系统，预约信息包括：日期、时间、上车的位置和目的地位置
|-
|
'''接收预约''' Receive Reservation
||
预约系统收集客户预约请求，并把预约数据记录在数据库
|-
|
'''检查是否有可用的车/司机''' Check Availability
||
预约系统从预约数据库中查看是否有合适的车/司机，如果能找到合适的时间、日期，能配合预约请求的话，看看司机是否有空档。如能找到合适，在系统更新内部状态为是，否则写否。
|-
|
'''寻找其他可选''' Get Alternative Time
||
如果状态是没有，预约系统继续在数据库搜索有没有接近的预期时间？否则写没有合适请求的出发地点和目的地。
|-
|
'''提供预约信息''' Provide Reservation Information
||
预约系统自动发出通知到客户，如果有合适空档或者提供接近的日期时间
|-
|
'''处理预约''' Process Reservation
||
客户回复预约系统：接受或拒绝，预约系统把反馈记录在预约数据库。如果反馈是接受，预约系统会继续统计客户详细预约信息。如果客户拒绝，预约系统就会回复收到，并终止过程。
|-
|
'''分派司机''' Assign Driver
||
如果客户接受，预约系统会指派司机到已确认的日期、时间，上车地点和目的地。预约系统把这个记录在数据库中，并发信息通知相关司机
|-
|
'''接乘客''' Pickup Customer
||
司机按约好的日期时间，上车的地点接乘客，然后发信息到预约系统，通知乘客已经上车
|-
|
'''完成预约请求''' Finalize Reservation Request
||
预约系统在数据库中记录已经完成整个过程

|}


==010==

估算是一个范围，不是一个数字。<br>
唐工：你估计要完成开发用户登录模块要多少天？<br>
小李：三天。<br>
唐工：能在三天完成的可能性有多高？<br>
小李：可能性很高。<br>
唐工：可否量化一点。<br>
小李：估计50%-60%。<br>
唐工：所以很有机会不止三天，要四天了。<br>
小李：对的，其实也有可能甚至要五、六天，但我估计机会不大。<br>
唐工：你信心有多少？<br>
小李：难说，有95%的信心可以在六天之内完成。<br>
唐工：所以有可能甚至要用上七天了？<br>
小李：这样说吧，如果所有可能出问题的都出了问题，甚至会10或11天，但这种概率很低。<br>
最终管理者唐工还是要求有一个承诺，而不是一个估算？<br>
所以唐工再问小李：完成这个模块是否能够有一个确实的日期？<br>
小李：正如我前面说，很可能三天可以完成，但有可能四天。<br>
唐宫追问：你可以说四天吗？<br>
小李：也有可能五六天。<br>
唐工结束对话：OK，在不超过六天之内，尽你所能完成这个模块。<br>
唐工貌似请求，但实际是要求小李承诺这个模块要在六天之内开发完。假如这个模块的开发时间超过六天，唐工就有依据说小李没有尽力导致延误了。<br>
所以从以上对话，可以看到作为开发专业人员，必须分清估算和承诺。作为专业人士，我们最不应该给一些没有把握的承诺，误导对方。中国老话说一诺千金就是这个道理。<br><br>


==011==
从上面的例子可以看到，一般的单点估算是很容易被误导，以为那个天数是有把握达成的，所以我们最好从单点估算变成三点估算，每一个估算都应该有最可能的日期以外，还有最优或者最差共三点。但下一个问题是如果我们的项目是由一系列的任务组成的，第二任务依赖于第一个任务的完成，如何如何计算所有任务的总天数？<br>
如果你没听过蒙地卡罗方法的话，就会用分布统计把任务加起来。但实际上这是有偏差的。我们从下面这个例子就可以看出。<br>

==013==
如果假定每一步的分布都是一个正态分布，就可以用头两个方程式计算每一步的平均值跟标准差和方差，用方程式可计算3步的总均值大概是4。也可以用方程式计算标准差，总的是3.13左右。如果我们用蒙地卡罗模型假定每一个分布是一个正态分布，也可以看到出来的分布是很类似的正态分布，总的平均也接近14，95%的范围是从8.02到20.37。和均值减除两个sigma标准差和均值加两个标准差接近。但如果仔细看的话，发现他三个步骤都是明显的往右偏的。所以我们假设它是一个正态分布不太能成立，更合适的是把它变成一个三角形分布，最低是最佳的1，最长是第一步的12，然后依据三角形。如果我们用蒙地卡罗的话，也可以估算三个三角形出来的分布，看见最后一个图，看见明显是类似往右有个尾巴，能更正确反应三个步骤加起来的天数的估计分布。跟前面的比较，很明显看到它是往右偏的，所以最高就得到26.45。那左面不用正态分布的话就没有这个长尾巴，所以就会比本来正态分布的下限高，是10.38。从这个简单例子看到，如果我们要把三点估算加起来，尤其是非平均正态分布的话，就不能用简单的方程式，或者假定它是正态分布来计算。需要用蒙地卡罗模型才能能真正反应总体的分布。
