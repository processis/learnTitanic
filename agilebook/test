==敏捷是什么==
*传统瀑布开发模式:依据范围（需求）估计时间和成本，然后监控
*敏捷是反过来:固定每一个迭代时间段（例如两周），然后团队按自身能力估计本迭代可以开发多少内容(范围)
In a “traditional” world Time and Cost flex to meet Scope.  In an Agile world, Scope flexes to meet time and cost.  Agile projects are never late!  But they may not deliver what you need the first time.<br>
[[文件:P9.jpg|500px]]

传统瀑布型项目, 按需求调研写成软件需求规格书，与客户确认后，做个详细计划（如，3到6个月）。但如果在过程中需求有变化，会导致后面无法按原计划开发，最常见的问题就是：项目结束时间还是不动，按本来时间交付，导致项目就要把后面的开发和测试时间压缩。我看过有些项目就是有这种原因，导致本来两周的系统测试被压缩到一两天，严重影响项目质量。<br>
[[文件:P10.jpg|500px]]

传统瀑布模式都会像上图，先有需求文档，然后设计、测试等，按各阶段，做出最终产品。

在敏捷开发，会把整个开发分成冲刺，把所有要做的按优先级逐步开发。这个就可以减少瀑布模式难以应付需求变更的问题。
*精益的概念，争取在每一个迭代，做出测试好可运行的软件，并演示给客户，获取反馈。

[[文件:P11.jpg|500px]]

==技巧 Agile Techniques==
*增量设计 Incremental design and documents
*测试驱动开发 Test-based design
*每日站会 Daily Standup meeting
*冲刺展示 Sprint demo
*冲刺回顾/复盘 Sprint retrospective
*重构 Refactoring

==敏捷开发步骤==

[[文件:0A Agile stories p13.jpg|500px]]

*以scrum为例子，一个迭代会包括从需求来的产品Backlog，然后每个团队团队按照优先级算当前迭代的冲刺Backlog。每天利用站立会议管理问题和风险。每个层次都以最后展示给客户可执行的一个软件作为完成标准，这个叫冲刺展示，展示后也需要有团队的回顾、复盘，改进下一个冲刺。<br>
*敏捷很注重代码的质量，不会花精力在一些无用的文档上面,但会注重测试驱动开发、重构等方法，确保软件开发质量；也重视给团队反馈，鼓励用白板、墙上贴纸等方式，让大家知道现在的进展情况。

[[文件:P12-1.jpg|600px]]

[[文件:P12-2.jpg|600px]]

==成功要素==
*是否内部人员开发 -- 如果都分包出去的话，难以利用敏捷，因为他们跟公司只有外包合同关系，导致这种敏捷难以用于他们外包
*团队不能分散，也不能太大
*团队的能力  -- 如果都是毕业生，就难以启动敏捷项目了
*客户参与很重要 -- 需要每2周给开发反馈，防止几个月后才发现不满足客户想法
*依赖开发团队与产品经理(Product owner)  合作，使软件开发集合产品的理念
